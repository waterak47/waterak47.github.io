{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1510194651000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1510194651000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1510194651000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1510194651000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1510194651000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1510194651000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1510194651000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1510194651000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1510194651000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1510194651000},{"_id":"themes/next/README.md","hash":"1a79f01601517b777cfb238916635d4df7368473","modified":1510194651000},{"_id":"themes/next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1510194651000},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1510194651000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1510194651000},{"_id":"themes/next/_config.yml","hash":"ca148d48aa90097f60b3ec5fe596e7ecfa724b5d","modified":1510195824000},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1510194651000},{"_id":"source/_posts/Java基础：I-O操作.md","hash":"22de51b931a9bae5a241db9f023dd57ef777178b","modified":1511762784000},{"_id":"source/_posts/Mysql基础.md","hash":"27abb99fc99383dd3d98d3977ff48933ac2bff4c","modified":1511768747000},{"_id":"source/_posts/Java基础：异常.md","hash":"5d3f7b66c6303a778eef0a1d93a429a341530adf","modified":1510194651000},{"_id":"source/_posts/Java-复制文件和文件夹.md","hash":"bed266c24a4220a8d3d925528eebdf019dec7b20","modified":1510194651000},{"_id":"source/categories/index.md","hash":"63030ba8131ff84ec1fcf71d88204e17c0b350c4","modified":1510194651000},{"_id":"source/tags/index.md","hash":"0ffa3e0ef7a5105b140c5e0fd9925a518c9783e3","modified":1510194651000},{"_id":"source/_posts/面试题.md","hash":"3140daac721ad00adc6d7c68aed2b4d44d08c30b","modified":1510884095000},{"_id":"source/_posts/Java基础：网络编程.md","hash":"39cc522ceaebb9225542eaaa925c62f45129f9d5","modified":1510908005000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1510194651000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1510194651000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1510194651000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1510194651000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1510194651000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1510194651000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1510194651000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1510194651000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1510194651000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1510194651000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1510194651000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1510194651000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1510194651000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1510194651000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1510194651000},{"_id":"themes/next/layout/_layout.swig","hash":"26bd9be87576eaab53aaf178b5ddd84d8bb4cabf","modified":1510194651000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1510194651000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1510194651000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1510194651000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1510194651000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1510194651000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1510194651000},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1510194651000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1510194651000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1510194651000},{"_id":"themes/next/package-lock.json","hash":"12a3557021ecf4570f4ae6f6ce603177a2d1044e","modified":1510194651000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1510194651000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1510194651000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1510194651000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1510194651000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1510194651000},{"_id":"themes/next/layout/_macro/post.swig","hash":"7a64914a0a3c893c1aaa8b5349b85898f95af314","modified":1510194651000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1510194651000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"044bc872d7b59655e46f6fb1cf14f767e31a4dfa","modified":1510194651000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1510194651000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1510194651000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1510194651000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"865fc449e13a44ad361644304433330d27990c03","modified":1510194651000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1510194651000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1510194651000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1510194651000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1510194651000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1510194651000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1510194651000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1510194651000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1510194651000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1510194651000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1510194651000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1510194651000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1510194651000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1510194651000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1510194651000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1510194651000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1510194651000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1510194651000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1510194651000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1510194651000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1510194651000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1510194651000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1510194651000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1510194651000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1510194651000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1510194651000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1510194651000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1510194651000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1510194651000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1510194651000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1510194651000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1510194651000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1510194651000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1510194651000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1510194651000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1510194651000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1510194651000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1510194651000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1510194651000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1510194651000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1510194651000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1510194651000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1510194651000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1510194651000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510194651000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1510194651000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1510194651000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1510194651000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1510194651000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1510194651000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1510194651000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1510194651000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1510194651000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1510194651000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1510194651000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1510194651000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1510194651000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"f780973e0f8c2e52a70ac5e927af845d7b547b71","modified":1510194651000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1510194651000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1510194651000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1510194651000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1510194651000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1510194651000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1510194651000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1510194651000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1510194651000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1510194651000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1510194651000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1510194651000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1510194651000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1510194651000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1510194651000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1510194651000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1510194651000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1510194651000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1510194651000},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1510194651000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1510194651000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1510194651000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1510194651000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1510194651000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1510194651000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1508809210000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1510194651000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1510194651000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1510194651000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1510194651000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1510194651000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1510194651000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1510194651000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1510194651000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1508809210000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1510194651000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1510194651000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1510194651000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1510194651000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1510194651000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1510194651000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1510194651000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1510194651000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1510194651000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1510194651000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1510194651000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1510194651000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1510194651000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1510194651000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1510194651000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1510194651000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1510194651000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1510194651000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1510194651000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1510194651000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1510194651000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1510194651000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1510194651000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1510194651000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1510194651000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1510194651000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1510194651000},{"_id":"public/categories/index.html","hash":"9ebb1e6d95be296cd47b568d32898114f8ea3f25","modified":1511768801124},{"_id":"public/tags/index.html","hash":"04611f8177c4735418a980bbd710e1be828f483c","modified":1511768801136},{"_id":"public/categories/Java/index.html","hash":"292a4267b297dc40418b6a70ec1a3fc92219a078","modified":1511768801137},{"_id":"public/categories/面试题/index.html","hash":"40ce4bf11e96fcddaad5e32b2c555e2bf962a99e","modified":1511768801137},{"_id":"public/archives/index.html","hash":"acf7de457607cdefd830406d1520969442ab7649","modified":1511768801137},{"_id":"public/archives/2017/index.html","hash":"ad8764bfcc022130e89ac1937011b267a84ae537","modified":1511768801137},{"_id":"public/archives/2017/10/index.html","hash":"a83125ebe9eab41f8df4195cf01ad40f80475435","modified":1511768801137},{"_id":"public/archives/2017/11/index.html","hash":"cb6c877a8b5d9cfdd327114326db021ae18d7538","modified":1511768801137},{"_id":"public/tags/Java基础/index.html","hash":"b860c7b108f4d38f72579b43cbf0ab8f90884cb3","modified":1511768801137},{"_id":"public/tags/面试题/index.html","hash":"ba54af8f2167b560ecb44d5bcac825b9ab46265f","modified":1511768801137},{"_id":"public/tags/Java网络编程/index.html","hash":"2a20b0a46863e00b6c163cbeccf023069057fbd8","modified":1511768801137},{"_id":"public/2017/11/17/Java基础：网络编程/index.html","hash":"0dda08ca6323e83d6f410ef09eeb5c6c3f57585c","modified":1511768801137},{"_id":"public/2017/11/10/面试题/index.html","hash":"df936f114746c29e8023a1f41a9ca604041ff65a","modified":1511768801137},{"_id":"public/2017/11/02/Java-复制文件和文件夹/index.html","hash":"3233b35b6cc0922c90b74efcac13ec265c8f35b2","modified":1511768801137},{"_id":"public/2017/10/24/Java基础：异常/index.html","hash":"3216f558626c6adf5383cfa559b44990a0ddd7cc","modified":1511768801137},{"_id":"public/index.html","hash":"122679f36377e9056fb3c39b9f5f95c6867cc8b8","modified":1511768801137},{"_id":"public/2017/11/09/Java基础：I-O操作/index.html","hash":"f389221e15949ce7dbaa28523e5aea55467b9c33","modified":1511768801137},{"_id":"public/categories/MySQL/index.html","hash":"e1f03d25d6ac04c06443f00b14276ba8d7b1d81e","modified":1511768801145},{"_id":"public/tags/MySQL基础/index.html","hash":"a7c6c957fcf405c73f0a3f5bd693d251b8543c35","modified":1511768801145},{"_id":"public/2017/11/27/Mysql基础/index.html","hash":"6aee45c5be296e517aeb245064fd38f17c998e6a","modified":1511768801145},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511768801145},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511768801145},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1511768801145},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1511768801145},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1511768801145},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1511768801145},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1511768801145},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511768801145},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511768801145},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1511768801145},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511768801145},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1511768801145},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511768801145},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1511768801146},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1511768801146},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511768801146},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1511768801146},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1511768801146},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1511768801146},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1511768801147},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511768802202},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511768802203},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511768802208},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511768802208},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511768802208},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511768802208},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1511768802208},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511768802208},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511768802208},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511768802208},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511768802208},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511768802208},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511768802208},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1511768802224},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1511768802224},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1511768802232},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1511768802232},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1511768802232},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1511768802232},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1511768802232},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1511768802233},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1511768802233},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1511768802233},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1511768802233},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511768802233},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1511768802233},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1511768802233},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1511768802233},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1511768802233},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1511768802233},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1511768802233},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1511768802233},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1511768802233},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1511768802233},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1511768802233},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511768802233},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511768802233},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1511768802233},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1511768802234},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1511768802234},{"_id":"public/css/main.css","hash":"d02735bfce3be261234733755cc5613f92a724ea","modified":1511768802234},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1511768802234},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1511768802234},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511768802234},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511768802234},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1511768802238},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1511768802238},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511768802238},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1511768802238},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1511768802238},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1511768802238},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1511768802238},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1511768802238},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1511768802238},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1511768802238},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1511768802238},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1511768802239},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1511768802239},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1511768802239},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1511768802239},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1511768802239},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1511768802239},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1511768802239},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1511768802239},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1511768802239},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1511768802239},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1511768802239},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1511768802239},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1511768802239},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1511768802239},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1511768802239},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1511768802240},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1511768802240},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511768802240},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511768802240},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511768802240},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1511768802257}],"Category":[{"name":"Java","_id":"cjahw3yik000190w2kafxgvy5"},{"name":"MySQL","_id":"cjahw3yj4000790w2glk294gh"},{"name":"面试题","_id":"cjahw3yqv000k90w2b7npam10"}],"Data":[],"Page":[{"title":"categories","date":"2017-10-24T01:54:31.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-10-24 09:54:31\ntype: \"categories\"\n---\n","updated":"2017-11-09T02:30:51.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjahw3yqj000g90w28cloh4jq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-10-24T01:54:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-10-24 09:54:42\ntype: \"tags\"\n---\n","updated":"2017-11-09T02:30:51.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjahw3yqn000i90w29gxfskhx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Java基础：I/O操作","date":"2017-11-09T02:39:41.000Z","comments":1,"_content":"\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwlz8tcfog31kw24i7aq.gif)\n\n\n## I/O简介\nI/O就是输入和输出，核心是I/O流，流用于读写设备上的数据，包括硬盘文件、内存、键盘、网络...\n\n> 根据数据的走向分为：输入流、输出流\n> 根据处理的数据类型分为：字节流、字符流\n\n字节流能处理所有类型数据，对应的类以`Stream`结尾。\n字符流只能处理文本数据，对应的类以`Reader`或`Writer`结尾。\n\n字符流与字节流的区别：\n> 1.字节流操作的基本单元为字节；\n  2.字符流操作的基本单元为Unicode码元。\n  3.字节流默认不使用缓冲区；\n  4.字符流使用缓冲区。\n  5.字节流通常用于处理二进制数据，实际上它可以处理任意类型的数据，但它不支持直接写入或读取Unicode码元；\n  6.字符流通常处理文本数据，它支持写入及读取Unicode码元。\n\n<!--more-->\n\n各种流的继承关系:\n\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1flbn1ooov2j30k40laq56.jpg)\n\n## File\n\n### File类别：\n> File类，文件和目录路径名的抽象表示形式，总的来说就是java创建删除文件目录的一个类库\n\n### File的构造函数：\n\n> `File(File parent, String child)`, 根据 parent 抽象路径名和 child 路径名字符串创建一个新 File 实例\n  `File(String pathname)`, 通过将给定路径名字符串转换为抽象路径名来创建一个新 File 实例\n  `File(String parent, String child)`, 根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例\n  `File(URI uri)`, 通过将给定的 file: URI 转换为一个抽象路径名来创建一个新的 File 实例\n\n### File类常用方法：\n\n> `boolean isFile()`, 该方法的作用是判断当前File对象是否是文件\n  `boolean isDirectory()`, 判断该路径指示的是否是文件夹\n  `String[] list()`, 返回文件和目录清单\n  `File[] listFiles()`, 该方法的作用是返回当前文件夹下所有的文件对象, 包含其属性\n  `boolean mkdir()`, 该方法的作用是创建当前文件文件夹，而不创建该路径中的其它文件夹。假设d盘下只有一个test文件夹，则创建d： estabc文件夹则成功，如果创建d：a\b文件夹则创建失败，因为该路径中d：a文件夹不存在。如果创建成功则返回true，否则返回false.\n  `boolean mkdirs()`, 该方法的作用是创建文件夹，如果当前路径中包含的父目录不存在时，也会自动根据需要创建\n  `long length()`, 该方法的作用是返回文件存储时占用的字节数;该数值获得的是文件的实际大小，而不是文件在存储时占用的空间数\n  `boolean exists()`, 该方法的作用是判断当前文件或文件夹是否存在\n\n### File类常用属性：\n> `static String pathSeparator`, 与系统有关的路径分隔符字符，出于方便考虑，它被表示为一个字符串。 此字段被初始化为包含系统属性 file.separator 的值的第一个字符。在 UNIX 系统上，此字段的值为 `/`；在 Microsoft Windows 系统上，它为 `\\\\`\n\n### File类使用：\n``` java\npackage IO;\n\nimport java.io.File;\n\npublic class FileDemo {\n    public static void main(String[] args) throws Exception {\n        demo1();\n        demo2();\n    }\n\n    //读取文件\n    public static void demo1() {\n        File file1 = new File(\"./src/IO/file.java\");\n        //打印文件名称\n        System.out.println(file1.getName());\n        //获取文件大小\n        System.out.println(file1.length());\n    }\n\n    //文件列表\n    public static void demo2() {\n        File file2 = new File(\"./src/temp/\");\n\n        if (file2.exists() && file2.isDirectory()) {\n            String[] lists = file2.list();\n            //打印文件列表\n            for (int i = 0, len = lists.length; i < len; i++) {\n                System.out.println(lists[i]);\n            }\n        }\n    }\n}\n\n```\n\n## 字节流\n`Java中的字节流处理的最基本单位为单个字节，它通常用来处理二进制数据`。Java中最基本的两个字节流类是`InputStream`和`OutputStream`，它们分别代表了组基本的输入字节流和输出字节流。\n\n### InputStream和OutputStream\nInputStream是一个输入流，也就是用来读取文件的流，抽象方法read读取下一个字节，当读取到文件的末尾时候返回 -1。如果流中没有数据read就会阻塞直至数据到来或者异常出现或者流关闭。这是一个受查异常，具体的调用者必须处理异常。\n\nOutputStream是一种输出流，具体的方法和InputStream差不多，只是，一个读一个写。但是，他们都是抽象类，想要实现具体的功能还是需要依赖他们的子类来实现。\n\n### FileInputStream 函数接口\n``` java\nFileInputStream(File file)         // 构造函数1：创建“File对象”对应的“文件输入流”\nFileInputStream(FileDescriptor fd) // 构造函数2：创建“文件描述符”对应的“文件输入流”\nFileInputStream(String path)       // 构造函数3：创建“文件(路径为path)”对应的“文件输入流”\n\nint      available()             // 返回“剩余的可读取的字节数”或者“skip的字节数”\nvoid     close()                 // 关闭“文件输入流”\nFileChannel      getChannel()    // 返回“FileChannel”\nfinal FileDescriptor     getFD() // 返回“文件描述符”\nint      read()                  // 返回“文件输入流”的下一个字节\nint      read(byte[] buffer, int byteOffset, int byteCount) //读取“文件输入流”的数据并存在到buffer，从byteOffset开始存储，存储长度是byteCount。\nlong     skip(long byteCount)    // 跳过byteCount个字节\n```\n\n### FileInputStream代码\n``` java\npackage IO;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\n\npublic class FileDemo2 {\n    public static void main(String[] args) throws Exception {\n        demo2();\n    }\n\n    public static void demo1() {\n        File file = new File(\"./src/IO/file.java\");\n        FileInputStream inputStream = null;\n\n        try {\n            inputStream = new FileInputStream(file);\n            int data;\n            byte[] bytes = new byte[1024];\n\n            while ((data = inputStream.read(bytes)) != -1) {\n                System.out.println(new String(bytes, 0, data));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                inputStream.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void demo2() {\n        File file = new File(\"./src/IO/file.java\");\n        FileInputStream inputStream = null;\n\n        try {\n            inputStream = new FileInputStream(file);\n            byte[] bytes = new byte[1024];\n            int data = inputStream.read(bytes);\n            \n            for(int i =0, len = bytes.length; i < len; i++) {\n                System.out.println((char)bytes[i]);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                inputStream.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n```\n\n### FileOutputStream 函数接口\n``` java\nFileOutputStream(File file)                   // 构造函数1：创建“File对象”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(File file, boolean append)   // 构造函数2：创建“File对象”对应的“文件输入流”；指定“追加模式”。\nFileOutputStream(FileDescriptor fd)           // 构造函数3：创建“文件描述符”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(String path)                 // 构造函数4：创建“文件(路径为path)”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(String path, boolean append) // 构造函数5：创建“文件(路径为path)”对应的“文件输入流”；指定“追加模式”。\n\nvoid                    close()      // 关闭“输出流”\nFileChannel             getChannel() // 返回“FileChannel”\nfinal FileDescriptor    getFD()      // 返回“文件描述符”\nvoid                    write(byte[] buffer, int byteOffset, int byteCount) // 将buffer写入到“文件输出流”中，从buffer的byteOffset开始写，写入长度是byteCount。\nvoid                    write(int oneByte)  // 写入字节oneByte到“文件输出流”中 \n```\n\n### FileOutputStream代码\n``` java\npackage IO;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\npublic class FileDemo3 {\n    public static void main(String[] args) throws Exception {\n        demo1();\n    }\n\n    public static void demo1() {\n        File file = new File(\"./src/IO/file.java\");\n        File outFile = new File(\"./src/IO/out.txt\");\n        FileInputStream inputStream = null;\n        FileOutputStream outputStream = null;\n        try {\n            inputStream = new FileInputStream(file);\n            outputStream = new FileOutputStream(outFile);\n            byte[] bytes = new byte[1024];\n            int data;\n\n            while((data = inputStream.read(bytes)) != -1) {\n                outputStream.write(bytes);\n            }\n\n        } catch (IOException e1) {\n            e1.printStackTrace();\n            try {\n                outputStream.close();\n                inputStream.close();\n            } catch (IOException e2) {\n                e2.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n### ObjectOutputStream和ObjectInputStream\nJava平台允许我们在内存中创建可复用的Java对象，但一般情况下，只有当JVM处于运行时，这些对象才可能存在，即，这些对象的生命周期不会 比JVM的生命周期更长。但在现实应用中，就可能要求在JVM停止运行之后能够保存(持久化)指定的对象，并在将来重新读取被保存的对象。Java对象序 列化就能够帮助我们实现该功能。\n\n使用Java对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的\"状态\"，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。\n\n我们可以使用java的IO流中的对象流ObjectOutputStream和ObjectInputStream来实现序列化和反序列化的操作。\n\nJava对象序列化就是将对象转换为字节流，然后可以通过这些值再生成相同状态的对象。对象序列化是对象持久化的一种实现方法,它是将一个对象的属性和方法转化为一种序列化的格式以用于存储和传输,反序列化就是根据这些保存的信息重建对象的过程。\n\n序列化的实现：将需要被序列化的类实现Serializable接口，然后使用一个输出(如:FileOutputStream)来构造一个ObjectOutputStream(对象流)对象，接着，使用ObjectOutputStream对象的writeObject(Object obj)方法就可以将参数为obj的对象写出(即保存其状态)，要恢复的话则用输入流。所以使用ObjectOutputStream类实现序列化，ObjectInputStream类实现反序列化。\n\n\n``` java\npackage IO;\n\nimport java.io.*;\n\npublic class FileDemo4 {\n    public static void main(String[] args) throws Exception {\n        writeObject();\n        readObject();\n    }\n\n    //写入\n    public static void writeObject() throws IOException {\n\n        File file = new File(\"./src/IO/obj.txt\");\n\n        //输出文件\n        OutputStream outFile = new FileOutputStream(file);\n\n        ObjectOutputStream objOut = new ObjectOutputStream(outFile);\n\n        Shop shop = new Shop(\"MacBookPro\");\n\n        //文件写入，序列化\n        objOut.writeObject(shop);\n    }\n\n    //读取\n    public static void readObject() throws ClassNotFoundException, IOException {\n\n        File file = new File(\"./src/IO/obj.txt\");\n\n        //读取文件\n        InputStream inputFile = new FileInputStream(file);\n\n        ObjectInputStream objInput = new ObjectInputStream(inputFile);\n\n        //读取之前存储的文件，反序列化，将文件还原\n        Object obj = objInput.readObject();\n        Shop p = (Shop)obj;\n        System.out.println(p.getProductName());\n    }\n}\n\n```\n\n\n## 参考\nhttp://longpo.iteye.com/blog/2203627\nhttp://www.jianshu.com/p/21ed71b26a5d\nhttps://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/","source":"_posts/Java基础：I-O操作.md","raw":"---\ntitle: Java基础：I/O操作\ndate: 2017-11-09 10:39:41\ncomments: true\ntags: Java基础\ncategories: Java\n---\n\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwlz8tcfog31kw24i7aq.gif)\n\n\n## I/O简介\nI/O就是输入和输出，核心是I/O流，流用于读写设备上的数据，包括硬盘文件、内存、键盘、网络...\n\n> 根据数据的走向分为：输入流、输出流\n> 根据处理的数据类型分为：字节流、字符流\n\n字节流能处理所有类型数据，对应的类以`Stream`结尾。\n字符流只能处理文本数据，对应的类以`Reader`或`Writer`结尾。\n\n字符流与字节流的区别：\n> 1.字节流操作的基本单元为字节；\n  2.字符流操作的基本单元为Unicode码元。\n  3.字节流默认不使用缓冲区；\n  4.字符流使用缓冲区。\n  5.字节流通常用于处理二进制数据，实际上它可以处理任意类型的数据，但它不支持直接写入或读取Unicode码元；\n  6.字符流通常处理文本数据，它支持写入及读取Unicode码元。\n\n<!--more-->\n\n各种流的继承关系:\n\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1flbn1ooov2j30k40laq56.jpg)\n\n## File\n\n### File类别：\n> File类，文件和目录路径名的抽象表示形式，总的来说就是java创建删除文件目录的一个类库\n\n### File的构造函数：\n\n> `File(File parent, String child)`, 根据 parent 抽象路径名和 child 路径名字符串创建一个新 File 实例\n  `File(String pathname)`, 通过将给定路径名字符串转换为抽象路径名来创建一个新 File 实例\n  `File(String parent, String child)`, 根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例\n  `File(URI uri)`, 通过将给定的 file: URI 转换为一个抽象路径名来创建一个新的 File 实例\n\n### File类常用方法：\n\n> `boolean isFile()`, 该方法的作用是判断当前File对象是否是文件\n  `boolean isDirectory()`, 判断该路径指示的是否是文件夹\n  `String[] list()`, 返回文件和目录清单\n  `File[] listFiles()`, 该方法的作用是返回当前文件夹下所有的文件对象, 包含其属性\n  `boolean mkdir()`, 该方法的作用是创建当前文件文件夹，而不创建该路径中的其它文件夹。假设d盘下只有一个test文件夹，则创建d： estabc文件夹则成功，如果创建d：a\b文件夹则创建失败，因为该路径中d：a文件夹不存在。如果创建成功则返回true，否则返回false.\n  `boolean mkdirs()`, 该方法的作用是创建文件夹，如果当前路径中包含的父目录不存在时，也会自动根据需要创建\n  `long length()`, 该方法的作用是返回文件存储时占用的字节数;该数值获得的是文件的实际大小，而不是文件在存储时占用的空间数\n  `boolean exists()`, 该方法的作用是判断当前文件或文件夹是否存在\n\n### File类常用属性：\n> `static String pathSeparator`, 与系统有关的路径分隔符字符，出于方便考虑，它被表示为一个字符串。 此字段被初始化为包含系统属性 file.separator 的值的第一个字符。在 UNIX 系统上，此字段的值为 `/`；在 Microsoft Windows 系统上，它为 `\\\\`\n\n### File类使用：\n``` java\npackage IO;\n\nimport java.io.File;\n\npublic class FileDemo {\n    public static void main(String[] args) throws Exception {\n        demo1();\n        demo2();\n    }\n\n    //读取文件\n    public static void demo1() {\n        File file1 = new File(\"./src/IO/file.java\");\n        //打印文件名称\n        System.out.println(file1.getName());\n        //获取文件大小\n        System.out.println(file1.length());\n    }\n\n    //文件列表\n    public static void demo2() {\n        File file2 = new File(\"./src/temp/\");\n\n        if (file2.exists() && file2.isDirectory()) {\n            String[] lists = file2.list();\n            //打印文件列表\n            for (int i = 0, len = lists.length; i < len; i++) {\n                System.out.println(lists[i]);\n            }\n        }\n    }\n}\n\n```\n\n## 字节流\n`Java中的字节流处理的最基本单位为单个字节，它通常用来处理二进制数据`。Java中最基本的两个字节流类是`InputStream`和`OutputStream`，它们分别代表了组基本的输入字节流和输出字节流。\n\n### InputStream和OutputStream\nInputStream是一个输入流，也就是用来读取文件的流，抽象方法read读取下一个字节，当读取到文件的末尾时候返回 -1。如果流中没有数据read就会阻塞直至数据到来或者异常出现或者流关闭。这是一个受查异常，具体的调用者必须处理异常。\n\nOutputStream是一种输出流，具体的方法和InputStream差不多，只是，一个读一个写。但是，他们都是抽象类，想要实现具体的功能还是需要依赖他们的子类来实现。\n\n### FileInputStream 函数接口\n``` java\nFileInputStream(File file)         // 构造函数1：创建“File对象”对应的“文件输入流”\nFileInputStream(FileDescriptor fd) // 构造函数2：创建“文件描述符”对应的“文件输入流”\nFileInputStream(String path)       // 构造函数3：创建“文件(路径为path)”对应的“文件输入流”\n\nint      available()             // 返回“剩余的可读取的字节数”或者“skip的字节数”\nvoid     close()                 // 关闭“文件输入流”\nFileChannel      getChannel()    // 返回“FileChannel”\nfinal FileDescriptor     getFD() // 返回“文件描述符”\nint      read()                  // 返回“文件输入流”的下一个字节\nint      read(byte[] buffer, int byteOffset, int byteCount) //读取“文件输入流”的数据并存在到buffer，从byteOffset开始存储，存储长度是byteCount。\nlong     skip(long byteCount)    // 跳过byteCount个字节\n```\n\n### FileInputStream代码\n``` java\npackage IO;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\n\npublic class FileDemo2 {\n    public static void main(String[] args) throws Exception {\n        demo2();\n    }\n\n    public static void demo1() {\n        File file = new File(\"./src/IO/file.java\");\n        FileInputStream inputStream = null;\n\n        try {\n            inputStream = new FileInputStream(file);\n            int data;\n            byte[] bytes = new byte[1024];\n\n            while ((data = inputStream.read(bytes)) != -1) {\n                System.out.println(new String(bytes, 0, data));\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                inputStream.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void demo2() {\n        File file = new File(\"./src/IO/file.java\");\n        FileInputStream inputStream = null;\n\n        try {\n            inputStream = new FileInputStream(file);\n            byte[] bytes = new byte[1024];\n            int data = inputStream.read(bytes);\n            \n            for(int i =0, len = bytes.length; i < len; i++) {\n                System.out.println((char)bytes[i]);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                inputStream.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n```\n\n### FileOutputStream 函数接口\n``` java\nFileOutputStream(File file)                   // 构造函数1：创建“File对象”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(File file, boolean append)   // 构造函数2：创建“File对象”对应的“文件输入流”；指定“追加模式”。\nFileOutputStream(FileDescriptor fd)           // 构造函数3：创建“文件描述符”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(String path)                 // 构造函数4：创建“文件(路径为path)”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。\nFileOutputStream(String path, boolean append) // 构造函数5：创建“文件(路径为path)”对应的“文件输入流”；指定“追加模式”。\n\nvoid                    close()      // 关闭“输出流”\nFileChannel             getChannel() // 返回“FileChannel”\nfinal FileDescriptor    getFD()      // 返回“文件描述符”\nvoid                    write(byte[] buffer, int byteOffset, int byteCount) // 将buffer写入到“文件输出流”中，从buffer的byteOffset开始写，写入长度是byteCount。\nvoid                    write(int oneByte)  // 写入字节oneByte到“文件输出流”中 \n```\n\n### FileOutputStream代码\n``` java\npackage IO;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\npublic class FileDemo3 {\n    public static void main(String[] args) throws Exception {\n        demo1();\n    }\n\n    public static void demo1() {\n        File file = new File(\"./src/IO/file.java\");\n        File outFile = new File(\"./src/IO/out.txt\");\n        FileInputStream inputStream = null;\n        FileOutputStream outputStream = null;\n        try {\n            inputStream = new FileInputStream(file);\n            outputStream = new FileOutputStream(outFile);\n            byte[] bytes = new byte[1024];\n            int data;\n\n            while((data = inputStream.read(bytes)) != -1) {\n                outputStream.write(bytes);\n            }\n\n        } catch (IOException e1) {\n            e1.printStackTrace();\n            try {\n                outputStream.close();\n                inputStream.close();\n            } catch (IOException e2) {\n                e2.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n### ObjectOutputStream和ObjectInputStream\nJava平台允许我们在内存中创建可复用的Java对象，但一般情况下，只有当JVM处于运行时，这些对象才可能存在，即，这些对象的生命周期不会 比JVM的生命周期更长。但在现实应用中，就可能要求在JVM停止运行之后能够保存(持久化)指定的对象，并在将来重新读取被保存的对象。Java对象序 列化就能够帮助我们实现该功能。\n\n使用Java对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的\"状态\"，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。\n\n我们可以使用java的IO流中的对象流ObjectOutputStream和ObjectInputStream来实现序列化和反序列化的操作。\n\nJava对象序列化就是将对象转换为字节流，然后可以通过这些值再生成相同状态的对象。对象序列化是对象持久化的一种实现方法,它是将一个对象的属性和方法转化为一种序列化的格式以用于存储和传输,反序列化就是根据这些保存的信息重建对象的过程。\n\n序列化的实现：将需要被序列化的类实现Serializable接口，然后使用一个输出(如:FileOutputStream)来构造一个ObjectOutputStream(对象流)对象，接着，使用ObjectOutputStream对象的writeObject(Object obj)方法就可以将参数为obj的对象写出(即保存其状态)，要恢复的话则用输入流。所以使用ObjectOutputStream类实现序列化，ObjectInputStream类实现反序列化。\n\n\n``` java\npackage IO;\n\nimport java.io.*;\n\npublic class FileDemo4 {\n    public static void main(String[] args) throws Exception {\n        writeObject();\n        readObject();\n    }\n\n    //写入\n    public static void writeObject() throws IOException {\n\n        File file = new File(\"./src/IO/obj.txt\");\n\n        //输出文件\n        OutputStream outFile = new FileOutputStream(file);\n\n        ObjectOutputStream objOut = new ObjectOutputStream(outFile);\n\n        Shop shop = new Shop(\"MacBookPro\");\n\n        //文件写入，序列化\n        objOut.writeObject(shop);\n    }\n\n    //读取\n    public static void readObject() throws ClassNotFoundException, IOException {\n\n        File file = new File(\"./src/IO/obj.txt\");\n\n        //读取文件\n        InputStream inputFile = new FileInputStream(file);\n\n        ObjectInputStream objInput = new ObjectInputStream(inputFile);\n\n        //读取之前存储的文件，反序列化，将文件还原\n        Object obj = objInput.readObject();\n        Shop p = (Shop)obj;\n        System.out.println(p.getProductName());\n    }\n}\n\n```\n\n\n## 参考\nhttp://longpo.iteye.com/blog/2203627\nhttp://www.jianshu.com/p/21ed71b26a5d\nhttps://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/","slug":"Java基础：I-O操作","published":1,"updated":"2017-11-27T06:06:24.000Z","layout":"post","photos":[],"link":"","_id":"cjahw3yid000090w2j7jk2e5b","content":"<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwlz8tcfog31kw24i7aq.gif\" alt=\"\"></p>\n<h2 id=\"I-O简介\"><a href=\"#I-O简介\" class=\"headerlink\" title=\"I/O简介\"></a>I/O简介</h2><p>I/O就是输入和输出，核心是I/O流，流用于读写设备上的数据，包括硬盘文件、内存、键盘、网络…</p>\n<blockquote>\n<p>根据数据的走向分为：输入流、输出流<br>根据处理的数据类型分为：字节流、字符流</p>\n</blockquote>\n<p>字节流能处理所有类型数据，对应的类以<code>Stream</code>结尾。<br>字符流只能处理文本数据，对应的类以<code>Reader</code>或<code>Writer</code>结尾。</p>\n<p>字符流与字节流的区别：</p>\n<blockquote>\n<p>1.字节流操作的基本单元为字节；<br>  2.字符流操作的基本单元为Unicode码元。<br>  3.字节流默认不使用缓冲区；<br>  4.字符流使用缓冲区。<br>  5.字节流通常用于处理二进制数据，实际上它可以处理任意类型的数据，但它不支持直接写入或读取Unicode码元；<br>  6.字符流通常处理文本数据，它支持写入及读取Unicode码元。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>各种流的继承关系:</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1flbn1ooov2j30k40laq56.jpg\" alt=\"\"></p>\n<h2 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h2><h3 id=\"File类别：\"><a href=\"#File类别：\" class=\"headerlink\" title=\"File类别：\"></a>File类别：</h3><blockquote>\n<p>File类，文件和目录路径名的抽象表示形式，总的来说就是java创建删除文件目录的一个类库</p>\n</blockquote>\n<h3 id=\"File的构造函数：\"><a href=\"#File的构造函数：\" class=\"headerlink\" title=\"File的构造函数：\"></a>File的构造函数：</h3><blockquote>\n<p><code>File(File parent, String child)</code>, 根据 parent 抽象路径名和 child 路径名字符串创建一个新 File 实例<br>  <code>File(String pathname)</code>, 通过将给定路径名字符串转换为抽象路径名来创建一个新 File 实例<br>  <code>File(String parent, String child)</code>, 根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例<br>  <code>File(URI uri)</code>, 通过将给定的 file: URI 转换为一个抽象路径名来创建一个新的 File 实例</p>\n</blockquote>\n<h3 id=\"File类常用方法：\"><a href=\"#File类常用方法：\" class=\"headerlink\" title=\"File类常用方法：\"></a>File类常用方法：</h3><blockquote>\n<p><code>boolean isFile()</code>, 该方法的作用是判断当前File对象是否是文件<br>  <code>boolean isDirectory()</code>, 判断该路径指示的是否是文件夹<br>  <code>String[] list()</code>, 返回文件和目录清单<br>  <code>File[] listFiles()</code>, 该方法的作用是返回当前文件夹下所有的文件对象, 包含其属性<br>  <code>boolean mkdir()</code>, 该方法的作用是创建当前文件文件夹，而不创建该路径中的其它文件夹。假设d盘下只有一个test文件夹，则创建d： estabc文件夹则成功，如果创建d：a\b文件夹则创建失败，因为该路径中d：a文件夹不存在。如果创建成功则返回true，否则返回false.<br>  <code>boolean mkdirs()</code>, 该方法的作用是创建文件夹，如果当前路径中包含的父目录不存在时，也会自动根据需要创建<br>  <code>long length()</code>, 该方法的作用是返回文件存储时占用的字节数;该数值获得的是文件的实际大小，而不是文件在存储时占用的空间数<br>  <code>boolean exists()</code>, 该方法的作用是判断当前文件或文件夹是否存在</p>\n</blockquote>\n<h3 id=\"File类常用属性：\"><a href=\"#File类常用属性：\" class=\"headerlink\" title=\"File类常用属性：\"></a>File类常用属性：</h3><blockquote>\n<p><code>static String pathSeparator</code>, 与系统有关的路径分隔符字符，出于方便考虑，它被表示为一个字符串。 此字段被初始化为包含系统属性 file.separator 的值的第一个字符。在 UNIX 系统上，此字段的值为 <code>/</code>；在 Microsoft Windows 系统上，它为 <code>\\\\</code></p>\n</blockquote>\n<h3 id=\"File类使用：\"><a href=\"#File类使用：\" class=\"headerlink\" title=\"File类使用：\"></a>File类使用：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo1();</div><div class=\"line\">        demo2();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//读取文件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file1 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        <span class=\"comment\">//打印文件名称</span></div><div class=\"line\">        System.out.println(file1.getName());</div><div class=\"line\">        <span class=\"comment\">//获取文件大小</span></div><div class=\"line\">        System.out.println(file1.length());</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//文件列表</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file2 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/temp/\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (file2.exists() &amp;&amp; file2.isDirectory()) &#123;</div><div class=\"line\">            String[] lists = file2.list();</div><div class=\"line\">            <span class=\"comment\">//打印文件列表</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = lists.length; i &lt; len; i++) &#123;</div><div class=\"line\">                System.out.println(lists[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"字节流\"><a href=\"#字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流</h2><p><code>Java中的字节流处理的最基本单位为单个字节，它通常用来处理二进制数据</code>。Java中最基本的两个字节流类是<code>InputStream</code>和<code>OutputStream</code>，它们分别代表了组基本的输入字节流和输出字节流。</p>\n<h3 id=\"InputStream和OutputStream\"><a href=\"#InputStream和OutputStream\" class=\"headerlink\" title=\"InputStream和OutputStream\"></a>InputStream和OutputStream</h3><p>InputStream是一个输入流，也就是用来读取文件的流，抽象方法read读取下一个字节，当读取到文件的末尾时候返回 -1。如果流中没有数据read就会阻塞直至数据到来或者异常出现或者流关闭。这是一个受查异常，具体的调用者必须处理异常。</p>\n<p>OutputStream是一种输出流，具体的方法和InputStream差不多，只是，一个读一个写。但是，他们都是抽象类，想要实现具体的功能还是需要依赖他们的子类来实现。</p>\n<h3 id=\"FileInputStream-函数接口\"><a href=\"#FileInputStream-函数接口\" class=\"headerlink\" title=\"FileInputStream 函数接口\"></a>FileInputStream 函数接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">FileInputStream(File file)         <span class=\"comment\">// 构造函数1：创建“File对象”对应的“文件输入流”</span></div><div class=\"line\">FileInputStream(FileDescriptor fd) <span class=\"comment\">// 构造函数2：创建“文件描述符”对应的“文件输入流”</span></div><div class=\"line\">FileInputStream(String path)       <span class=\"comment\">// 构造函数3：创建“文件(路径为path)”对应的“文件输入流”</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">available</span><span class=\"params\">()</span>             <span class=\"comment\">// 返回“剩余的可读取的字节数”或者“skip的字节数”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>     <span class=\"title\">close</span><span class=\"params\">()</span>                 <span class=\"comment\">// 关闭“文件输入流”</span></span></div><div class=\"line\"><span class=\"function\">FileChannel      <span class=\"title\">getChannel</span><span class=\"params\">()</span>    <span class=\"comment\">// 返回“FileChannel”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">final</span> FileDescriptor     <span class=\"title\">getFD</span><span class=\"params\">()</span> <span class=\"comment\">// 返回“文件描述符”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">read</span><span class=\"params\">()</span>                  <span class=\"comment\">// 返回“文件输入流”的下一个字节</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">read</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] buffer, <span class=\"keyword\">int</span> byteOffset, <span class=\"keyword\">int</span> byteCount)</span> <span class=\"comment\">//读取“文件输入流”的数据并存在到buffer，从byteOffset开始存储，存储长度是byteCount。</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span>     <span class=\"title\">skip</span><span class=\"params\">(<span class=\"keyword\">long</span> byteCount)</span>    <span class=\"comment\">// 跳过byteCount个字节</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"FileInputStream代码\"><a href=\"#FileInputStream代码\" class=\"headerlink\" title=\"FileInputStream代码\"></a>FileInputStream代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo2</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo2();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            <span class=\"keyword\">int</span> data;</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span> ((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(bytes, <span class=\"number\">0</span>, data));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">            <span class=\"keyword\">int</span> data = inputStream.read(bytes);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>, len = bytes.length; i &lt; len; i++) &#123;</div><div class=\"line\">                System.out.println((<span class=\"keyword\">char</span>)bytes[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"FileOutputStream-函数接口\"><a href=\"#FileOutputStream-函数接口\" class=\"headerlink\" title=\"FileOutputStream 函数接口\"></a>FileOutputStream 函数接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">FileOutputStream(File file)                   <span class=\"comment\">// 构造函数1：创建“File对象”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(File file, <span class=\"keyword\">boolean</span> append)   <span class=\"comment\">// 构造函数2：创建“File对象”对应的“文件输入流”；指定“追加模式”。</span></div><div class=\"line\">FileOutputStream(FileDescriptor fd)           <span class=\"comment\">// 构造函数3：创建“文件描述符”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(String path)                 <span class=\"comment\">// 构造函数4：创建“文件(路径为path)”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(String path, <span class=\"keyword\">boolean</span> append) <span class=\"comment\">// 构造函数5：创建“文件(路径为path)”对应的“文件输入流”；指定“追加模式”。</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">close</span><span class=\"params\">()</span>      <span class=\"comment\">// 关闭“输出流”</span></span></div><div class=\"line\"><span class=\"function\">FileChannel             <span class=\"title\">getChannel</span><span class=\"params\">()</span> <span class=\"comment\">// 返回“FileChannel”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">final</span> FileDescriptor    <span class=\"title\">getFD</span><span class=\"params\">()</span>      <span class=\"comment\">// 返回“文件描述符”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] buffer, <span class=\"keyword\">int</span> byteOffset, <span class=\"keyword\">int</span> byteCount)</span> <span class=\"comment\">// 将buffer写入到“文件输出流”中，从buffer的byteOffset开始写，写入长度是byteCount。</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">int</span> oneByte)</span>  <span class=\"comment\">// 写入字节oneByte到“文件输出流”中</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"FileOutputStream代码\"><a href=\"#FileOutputStream代码\" class=\"headerlink\" title=\"FileOutputStream代码\"></a>FileOutputStream代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo3</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo1();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        File outFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/out.txt\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        FileOutputStream outputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            outputStream = <span class=\"keyword\">new</span> FileOutputStream(outFile);</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">            <span class=\"keyword\">int</span> data;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span>((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                outputStream.write(bytes);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e1) &#123;</div><div class=\"line\">            e1.printStackTrace();</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                outputStream.close();</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e2) &#123;</div><div class=\"line\">                e2.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"ObjectOutputStream和ObjectInputStream\"><a href=\"#ObjectOutputStream和ObjectInputStream\" class=\"headerlink\" title=\"ObjectOutputStream和ObjectInputStream\"></a>ObjectOutputStream和ObjectInputStream</h3><p>Java平台允许我们在内存中创建可复用的Java对象，但一般情况下，只有当JVM处于运行时，这些对象才可能存在，即，这些对象的生命周期不会 比JVM的生命周期更长。但在现实应用中，就可能要求在JVM停止运行之后能够保存(持久化)指定的对象，并在将来重新读取被保存的对象。Java对象序 列化就能够帮助我们实现该功能。</p>\n<p>使用Java对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的”状态”，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。</p>\n<p>我们可以使用java的IO流中的对象流ObjectOutputStream和ObjectInputStream来实现序列化和反序列化的操作。</p>\n<p>Java对象序列化就是将对象转换为字节流，然后可以通过这些值再生成相同状态的对象。对象序列化是对象持久化的一种实现方法,它是将一个对象的属性和方法转化为一种序列化的格式以用于存储和传输,反序列化就是根据这些保存的信息重建对象的过程。</p>\n<p>序列化的实现：将需要被序列化的类实现Serializable接口，然后使用一个输出(如:FileOutputStream)来构造一个ObjectOutputStream(对象流)对象，接着，使用ObjectOutputStream对象的writeObject(Object obj)方法就可以将参数为obj的对象写出(即保存其状态)，要恢复的话则用输入流。所以使用ObjectOutputStream类实现序列化，ObjectInputStream类实现反序列化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo4</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        writeObject();</div><div class=\"line\">        readObject();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//写入</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/obj.txt\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//输出文件</span></div><div class=\"line\">        OutputStream outFile = <span class=\"keyword\">new</span> FileOutputStream(file);</div><div class=\"line\"></div><div class=\"line\">        ObjectOutputStream objOut = <span class=\"keyword\">new</span> ObjectOutputStream(outFile);</div><div class=\"line\"></div><div class=\"line\">        Shop shop = <span class=\"keyword\">new</span> Shop(<span class=\"string\">\"MacBookPro\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//文件写入，序列化</span></div><div class=\"line\">        objOut.writeObject(shop);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//读取</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">readObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ClassNotFoundException, IOException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/obj.txt\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//读取文件</span></div><div class=\"line\">        InputStream inputFile = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\"></div><div class=\"line\">        ObjectInputStream objInput = <span class=\"keyword\">new</span> ObjectInputStream(inputFile);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//读取之前存储的文件，反序列化，将文件还原</span></div><div class=\"line\">        Object obj = objInput.readObject();</div><div class=\"line\">        Shop p = (Shop)obj;</div><div class=\"line\">        System.out.println(p.getProductName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://longpo.iteye.com/blog/2203627\" target=\"_blank\" rel=\"external\">http://longpo.iteye.com/blog/2203627</a><br><a href=\"http://www.jianshu.com/p/21ed71b26a5d\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/21ed71b26a5d</a><br><a href=\"https://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/\" target=\"_blank\" rel=\"external\">https://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwlz8tcfog31kw24i7aq.gif\" alt=\"\"></p>\n<h2 id=\"I-O简介\"><a href=\"#I-O简介\" class=\"headerlink\" title=\"I/O简介\"></a>I/O简介</h2><p>I/O就是输入和输出，核心是I/O流，流用于读写设备上的数据，包括硬盘文件、内存、键盘、网络…</p>\n<blockquote>\n<p>根据数据的走向分为：输入流、输出流<br>根据处理的数据类型分为：字节流、字符流</p>\n</blockquote>\n<p>字节流能处理所有类型数据，对应的类以<code>Stream</code>结尾。<br>字符流只能处理文本数据，对应的类以<code>Reader</code>或<code>Writer</code>结尾。</p>\n<p>字符流与字节流的区别：</p>\n<blockquote>\n<p>1.字节流操作的基本单元为字节；<br>  2.字符流操作的基本单元为Unicode码元。<br>  3.字节流默认不使用缓冲区；<br>  4.字符流使用缓冲区。<br>  5.字节流通常用于处理二进制数据，实际上它可以处理任意类型的数据，但它不支持直接写入或读取Unicode码元；<br>  6.字符流通常处理文本数据，它支持写入及读取Unicode码元。</p>\n</blockquote>","more":"<p>各种流的继承关系:</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1flbn1ooov2j30k40laq56.jpg\" alt=\"\"></p>\n<h2 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h2><h3 id=\"File类别：\"><a href=\"#File类别：\" class=\"headerlink\" title=\"File类别：\"></a>File类别：</h3><blockquote>\n<p>File类，文件和目录路径名的抽象表示形式，总的来说就是java创建删除文件目录的一个类库</p>\n</blockquote>\n<h3 id=\"File的构造函数：\"><a href=\"#File的构造函数：\" class=\"headerlink\" title=\"File的构造函数：\"></a>File的构造函数：</h3><blockquote>\n<p><code>File(File parent, String child)</code>, 根据 parent 抽象路径名和 child 路径名字符串创建一个新 File 实例<br>  <code>File(String pathname)</code>, 通过将给定路径名字符串转换为抽象路径名来创建一个新 File 实例<br>  <code>File(String parent, String child)</code>, 根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例<br>  <code>File(URI uri)</code>, 通过将给定的 file: URI 转换为一个抽象路径名来创建一个新的 File 实例</p>\n</blockquote>\n<h3 id=\"File类常用方法：\"><a href=\"#File类常用方法：\" class=\"headerlink\" title=\"File类常用方法：\"></a>File类常用方法：</h3><blockquote>\n<p><code>boolean isFile()</code>, 该方法的作用是判断当前File对象是否是文件<br>  <code>boolean isDirectory()</code>, 判断该路径指示的是否是文件夹<br>  <code>String[] list()</code>, 返回文件和目录清单<br>  <code>File[] listFiles()</code>, 该方法的作用是返回当前文件夹下所有的文件对象, 包含其属性<br>  <code>boolean mkdir()</code>, 该方法的作用是创建当前文件文件夹，而不创建该路径中的其它文件夹。假设d盘下只有一个test文件夹，则创建d： estabc文件夹则成功，如果创建d：a\b文件夹则创建失败，因为该路径中d：a文件夹不存在。如果创建成功则返回true，否则返回false.<br>  <code>boolean mkdirs()</code>, 该方法的作用是创建文件夹，如果当前路径中包含的父目录不存在时，也会自动根据需要创建<br>  <code>long length()</code>, 该方法的作用是返回文件存储时占用的字节数;该数值获得的是文件的实际大小，而不是文件在存储时占用的空间数<br>  <code>boolean exists()</code>, 该方法的作用是判断当前文件或文件夹是否存在</p>\n</blockquote>\n<h3 id=\"File类常用属性：\"><a href=\"#File类常用属性：\" class=\"headerlink\" title=\"File类常用属性：\"></a>File类常用属性：</h3><blockquote>\n<p><code>static String pathSeparator</code>, 与系统有关的路径分隔符字符，出于方便考虑，它被表示为一个字符串。 此字段被初始化为包含系统属性 file.separator 的值的第一个字符。在 UNIX 系统上，此字段的值为 <code>/</code>；在 Microsoft Windows 系统上，它为 <code>\\\\</code></p>\n</blockquote>\n<h3 id=\"File类使用：\"><a href=\"#File类使用：\" class=\"headerlink\" title=\"File类使用：\"></a>File类使用：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo1();</div><div class=\"line\">        demo2();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//读取文件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file1 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        <span class=\"comment\">//打印文件名称</span></div><div class=\"line\">        System.out.println(file1.getName());</div><div class=\"line\">        <span class=\"comment\">//获取文件大小</span></div><div class=\"line\">        System.out.println(file1.length());</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//文件列表</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file2 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/temp/\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (file2.exists() &amp;&amp; file2.isDirectory()) &#123;</div><div class=\"line\">            String[] lists = file2.list();</div><div class=\"line\">            <span class=\"comment\">//打印文件列表</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = lists.length; i &lt; len; i++) &#123;</div><div class=\"line\">                System.out.println(lists[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"字节流\"><a href=\"#字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流</h2><p><code>Java中的字节流处理的最基本单位为单个字节，它通常用来处理二进制数据</code>。Java中最基本的两个字节流类是<code>InputStream</code>和<code>OutputStream</code>，它们分别代表了组基本的输入字节流和输出字节流。</p>\n<h3 id=\"InputStream和OutputStream\"><a href=\"#InputStream和OutputStream\" class=\"headerlink\" title=\"InputStream和OutputStream\"></a>InputStream和OutputStream</h3><p>InputStream是一个输入流，也就是用来读取文件的流，抽象方法read读取下一个字节，当读取到文件的末尾时候返回 -1。如果流中没有数据read就会阻塞直至数据到来或者异常出现或者流关闭。这是一个受查异常，具体的调用者必须处理异常。</p>\n<p>OutputStream是一种输出流，具体的方法和InputStream差不多，只是，一个读一个写。但是，他们都是抽象类，想要实现具体的功能还是需要依赖他们的子类来实现。</p>\n<h3 id=\"FileInputStream-函数接口\"><a href=\"#FileInputStream-函数接口\" class=\"headerlink\" title=\"FileInputStream 函数接口\"></a>FileInputStream 函数接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">FileInputStream(File file)         <span class=\"comment\">// 构造函数1：创建“File对象”对应的“文件输入流”</span></div><div class=\"line\">FileInputStream(FileDescriptor fd) <span class=\"comment\">// 构造函数2：创建“文件描述符”对应的“文件输入流”</span></div><div class=\"line\">FileInputStream(String path)       <span class=\"comment\">// 构造函数3：创建“文件(路径为path)”对应的“文件输入流”</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">available</span><span class=\"params\">()</span>             <span class=\"comment\">// 返回“剩余的可读取的字节数”或者“skip的字节数”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>     <span class=\"title\">close</span><span class=\"params\">()</span>                 <span class=\"comment\">// 关闭“文件输入流”</span></span></div><div class=\"line\"><span class=\"function\">FileChannel      <span class=\"title\">getChannel</span><span class=\"params\">()</span>    <span class=\"comment\">// 返回“FileChannel”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">final</span> FileDescriptor     <span class=\"title\">getFD</span><span class=\"params\">()</span> <span class=\"comment\">// 返回“文件描述符”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">read</span><span class=\"params\">()</span>                  <span class=\"comment\">// 返回“文件输入流”的下一个字节</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>      <span class=\"title\">read</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] buffer, <span class=\"keyword\">int</span> byteOffset, <span class=\"keyword\">int</span> byteCount)</span> <span class=\"comment\">//读取“文件输入流”的数据并存在到buffer，从byteOffset开始存储，存储长度是byteCount。</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span>     <span class=\"title\">skip</span><span class=\"params\">(<span class=\"keyword\">long</span> byteCount)</span>    <span class=\"comment\">// 跳过byteCount个字节</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"FileInputStream代码\"><a href=\"#FileInputStream代码\" class=\"headerlink\" title=\"FileInputStream代码\"></a>FileInputStream代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo2</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo2();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            <span class=\"keyword\">int</span> data;</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span> ((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                System.out.println(<span class=\"keyword\">new</span> String(bytes, <span class=\"number\">0</span>, data));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">            <span class=\"keyword\">int</span> data = inputStream.read(bytes);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>, len = bytes.length; i &lt; len; i++) &#123;</div><div class=\"line\">                System.out.println((<span class=\"keyword\">char</span>)bytes[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"FileOutputStream-函数接口\"><a href=\"#FileOutputStream-函数接口\" class=\"headerlink\" title=\"FileOutputStream 函数接口\"></a>FileOutputStream 函数接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">FileOutputStream(File file)                   <span class=\"comment\">// 构造函数1：创建“File对象”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(File file, <span class=\"keyword\">boolean</span> append)   <span class=\"comment\">// 构造函数2：创建“File对象”对应的“文件输入流”；指定“追加模式”。</span></div><div class=\"line\">FileOutputStream(FileDescriptor fd)           <span class=\"comment\">// 构造函数3：创建“文件描述符”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(String path)                 <span class=\"comment\">// 构造函数4：创建“文件(路径为path)”对应的“文件输入流”；默认“追加模式”是false，即“写到输出的流内容”不是以追加的方式添加到文件中。</span></div><div class=\"line\">FileOutputStream(String path, <span class=\"keyword\">boolean</span> append) <span class=\"comment\">// 构造函数5：创建“文件(路径为path)”对应的“文件输入流”；指定“追加模式”。</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">close</span><span class=\"params\">()</span>      <span class=\"comment\">// 关闭“输出流”</span></span></div><div class=\"line\"><span class=\"function\">FileChannel             <span class=\"title\">getChannel</span><span class=\"params\">()</span> <span class=\"comment\">// 返回“FileChannel”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">final</span> FileDescriptor    <span class=\"title\">getFD</span><span class=\"params\">()</span>      <span class=\"comment\">// 返回“文件描述符”</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] buffer, <span class=\"keyword\">int</span> byteOffset, <span class=\"keyword\">int</span> byteCount)</span> <span class=\"comment\">// 将buffer写入到“文件输出流”中，从buffer的byteOffset开始写，写入长度是byteCount。</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>                    <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">int</span> oneByte)</span>  <span class=\"comment\">// 写入字节oneByte到“文件输出流”中</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"FileOutputStream代码\"><a href=\"#FileOutputStream代码\" class=\"headerlink\" title=\"FileOutputStream代码\"></a>FileOutputStream代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo3</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        demo1();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/file.java\"</span>);</div><div class=\"line\">        File outFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/out.txt\"</span>);</div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        FileOutputStream outputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">            outputStream = <span class=\"keyword\">new</span> FileOutputStream(outFile);</div><div class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">            <span class=\"keyword\">int</span> data;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span>((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                outputStream.write(bytes);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e1) &#123;</div><div class=\"line\">            e1.printStackTrace();</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                outputStream.close();</div><div class=\"line\">                inputStream.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e2) &#123;</div><div class=\"line\">                e2.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"ObjectOutputStream和ObjectInputStream\"><a href=\"#ObjectOutputStream和ObjectInputStream\" class=\"headerlink\" title=\"ObjectOutputStream和ObjectInputStream\"></a>ObjectOutputStream和ObjectInputStream</h3><p>Java平台允许我们在内存中创建可复用的Java对象，但一般情况下，只有当JVM处于运行时，这些对象才可能存在，即，这些对象的生命周期不会 比JVM的生命周期更长。但在现实应用中，就可能要求在JVM停止运行之后能够保存(持久化)指定的对象，并在将来重新读取被保存的对象。Java对象序 列化就能够帮助我们实现该功能。</p>\n<p>使用Java对象序列化，在保存对象时，会把其状态保存为一组字节，在未来，再将这些字节组装成对象。必须注意地是，对象序列化保存的是对象的”状态”，即它的成员变量。由此可知，对象序列化不会关注类中的静态变量。</p>\n<p>我们可以使用java的IO流中的对象流ObjectOutputStream和ObjectInputStream来实现序列化和反序列化的操作。</p>\n<p>Java对象序列化就是将对象转换为字节流，然后可以通过这些值再生成相同状态的对象。对象序列化是对象持久化的一种实现方法,它是将一个对象的属性和方法转化为一种序列化的格式以用于存储和传输,反序列化就是根据这些保存的信息重建对象的过程。</p>\n<p>序列化的实现：将需要被序列化的类实现Serializable接口，然后使用一个输出(如:FileOutputStream)来构造一个ObjectOutputStream(对象流)对象，接着，使用ObjectOutputStream对象的writeObject(Object obj)方法就可以将参数为obj的对象写出(即保存其状态)，要恢复的话则用输入流。所以使用ObjectOutputStream类实现序列化，ObjectInputStream类实现反序列化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileDemo4</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        writeObject();</div><div class=\"line\">        readObject();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//写入</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/obj.txt\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//输出文件</span></div><div class=\"line\">        OutputStream outFile = <span class=\"keyword\">new</span> FileOutputStream(file);</div><div class=\"line\"></div><div class=\"line\">        ObjectOutputStream objOut = <span class=\"keyword\">new</span> ObjectOutputStream(outFile);</div><div class=\"line\"></div><div class=\"line\">        Shop shop = <span class=\"keyword\">new</span> Shop(<span class=\"string\">\"MacBookPro\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//文件写入，序列化</span></div><div class=\"line\">        objOut.writeObject(shop);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//读取</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">readObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ClassNotFoundException, IOException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"./src/IO/obj.txt\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//读取文件</span></div><div class=\"line\">        InputStream inputFile = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\"></div><div class=\"line\">        ObjectInputStream objInput = <span class=\"keyword\">new</span> ObjectInputStream(inputFile);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//读取之前存储的文件，反序列化，将文件还原</span></div><div class=\"line\">        Object obj = objInput.readObject();</div><div class=\"line\">        Shop p = (Shop)obj;</div><div class=\"line\">        System.out.println(p.getProductName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://longpo.iteye.com/blog/2203627\" target=\"_blank\" rel=\"external\">http://longpo.iteye.com/blog/2203627</a><br><a href=\"http://www.jianshu.com/p/21ed71b26a5d\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/21ed71b26a5d</a><br><a href=\"https://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/\" target=\"_blank\" rel=\"external\">https://chenjiabing666.github.io/2017/05/23/Java-IO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</a></p>"},{"title":"MySQL基础","date":"2017-11-27T06:09:23.000Z","_content":"\n一些Mysql的基础内容\n\n<!--more-->\n\n### 登陆MySQL数据库\n```\nmysql -u your_user_name -p Enter password: your_passwor;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmifn817j30mb08ita3.jpg)\n\n### 查询数据库\n```\nshow databases;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmkj7qmqj30go087q3h.jpg)\n\n### 创建数据库mydb\n```\ncreate database mydb;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmmeamc2j30go087q3h.jpg)\n\n### 使用指定数据库\n```\nuse mydb;\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwmmzsbuvj30bn02bdfx.jpg)\n\n### 查看当前数据库\n```\nselect database();\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmnogn05j30bm05ower.jpg)\n\n### 显示数据库\n```\nshow databases;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwmo84jrsj3091084t95.jpg)\n\n### 创建表格\n```\ncreate table customer(\n\tmid char(5) primary key,\n\tnam varchar(20),\n\tbirh datetime,\n\tsex char(1) default'0'\n);\n```\n![](https://ws1.sinaimg.cn/large/006tKfTcly1flwmq9l0wxj30cy05t3z3.jpg)\n\n### 数据库有哪些表\n```\nshow tables;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmrrtjm7j30a505wmxg.jpg)\n\n### 表结构\n```\ndesc customer;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcly1flwmsuqjvuj30fq07jt9h.jpg)\n\n### 删除表\n```\ndrop table customer;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmu1hu8kj30b902raa8.jpg)\n\n### 插入数据\n```\n-- 插入一条记录\nINSERT INTO customer values(\"D0001\", \"Jack\", \"1990-06-01\", \"1\");\nINSERT INTO customer (mid, nam, birh, sex) values(\"D0002\", \"Mike\", \"1991-12-01\", \"1\");\n\n-- 插入多条记录\nINSERT INTO customer values\n(\"D0003\", \"Jack3\", \"1993-06-01\", \"1\"), \n(\"D0004\", \"Jack4\", \"1994-06-01\", \"1\"), \n(\"D0005\", \"Jack5\", \"1995-06-01\", \"1\");\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwnwyll34j30mf0ezabz.jpg)\n\n### 查询数据\n```\nselect * from customer;\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcly1flwny6n7bkj30d706gmxm.jpg)\n\n### 自增序列`AUTO_INCREMENT`\n```\n-- 创建表\ncreate table good (\n\tid INT AUTO_INCREMENT PRIMARY KEY,\n\tnam VARCHAR(30)\n);\n\n-- 插入数据\nINSERT INTO customer (nam) values(\"jack\"), (\"mike\"), (\"franck\");\n```\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1flwo55zwiwj30li099wfg.jpg)\n\n### 更新数据\n```\nupdate good set nam=\"jack123\" where id=1;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwo7cxrqrj30g608bgmf.jpg)\n\n### 删除数据\n```\ndelete from good where id=1;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwo8gu89xj30dq0efab7.jpg)\n\n\n### 查询指定\n\n```\nselect 列名1, 列名2 ... from 表名 [条件表达式];\nselect nam from good;\n```\n\n### 模糊查询\n\n```\nselect nam from good where nam like 'f%';\n```\n\n### 条件组合查询： NOT, AND, OR\n\n```\nselect * from customer where birh is not null and mid='D0002';\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwoiycbgaj30lf0c7myh.jpg)\n\n### 查询结果排序：ASC升序 DESC降序\n```\nselect * from customer where birh is not null order by birh desc;\nselect * from customer order by birh desc;\n```\n\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwon04znhj30md0e6jt5.jpg)\n\n### 分组 GROUP By\n\n| 函数 | 说明 |\n| ------| ------ |\n| AVG | 平均值 |\n| COUNT | 计数 |\n| MIN | 最小值 |\n| MAX | 最大值 |\n| SUM | 求和 |\n\n```\nselect count(nam), sex from customer group by sex;\n```\n\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwot18gqrj30ja04xmxg.jpg)\n\n\n\n\n### 删除数据库\n```\ndrop database mydb;\n```\n\n","source":"_posts/Mysql基础.md","raw":"---\ntitle: MySQL基础\ndate: 2017-11-27 14:09:23\ntags: MySQL基础\ncategories: MySQL\n---\n\n一些Mysql的基础内容\n\n<!--more-->\n\n### 登陆MySQL数据库\n```\nmysql -u your_user_name -p Enter password: your_passwor;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmifn817j30mb08ita3.jpg)\n\n### 查询数据库\n```\nshow databases;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmkj7qmqj30go087q3h.jpg)\n\n### 创建数据库mydb\n```\ncreate database mydb;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmmeamc2j30go087q3h.jpg)\n\n### 使用指定数据库\n```\nuse mydb;\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwmmzsbuvj30bn02bdfx.jpg)\n\n### 查看当前数据库\n```\nselect database();\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwmnogn05j30bm05ower.jpg)\n\n### 显示数据库\n```\nshow databases;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwmo84jrsj3091084t95.jpg)\n\n### 创建表格\n```\ncreate table customer(\n\tmid char(5) primary key,\n\tnam varchar(20),\n\tbirh datetime,\n\tsex char(1) default'0'\n);\n```\n![](https://ws1.sinaimg.cn/large/006tKfTcly1flwmq9l0wxj30cy05t3z3.jpg)\n\n### 数据库有哪些表\n```\nshow tables;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmrrtjm7j30a505wmxg.jpg)\n\n### 表结构\n```\ndesc customer;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcly1flwmsuqjvuj30fq07jt9h.jpg)\n\n### 删除表\n```\ndrop table customer;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcly1flwmu1hu8kj30b902raa8.jpg)\n\n### 插入数据\n```\n-- 插入一条记录\nINSERT INTO customer values(\"D0001\", \"Jack\", \"1990-06-01\", \"1\");\nINSERT INTO customer (mid, nam, birh, sex) values(\"D0002\", \"Mike\", \"1991-12-01\", \"1\");\n\n-- 插入多条记录\nINSERT INTO customer values\n(\"D0003\", \"Jack3\", \"1993-06-01\", \"1\"), \n(\"D0004\", \"Jack4\", \"1994-06-01\", \"1\"), \n(\"D0005\", \"Jack5\", \"1995-06-01\", \"1\");\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwnwyll34j30mf0ezabz.jpg)\n\n### 查询数据\n```\nselect * from customer;\n```\n![](https://ws4.sinaimg.cn/large/006tKfTcly1flwny6n7bkj30d706gmxm.jpg)\n\n### 自增序列`AUTO_INCREMENT`\n```\n-- 创建表\ncreate table good (\n\tid INT AUTO_INCREMENT PRIMARY KEY,\n\tnam VARCHAR(30)\n);\n\n-- 插入数据\nINSERT INTO customer (nam) values(\"jack\"), (\"mike\"), (\"franck\");\n```\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1flwo55zwiwj30li099wfg.jpg)\n\n### 更新数据\n```\nupdate good set nam=\"jack123\" where id=1;\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwo7cxrqrj30g608bgmf.jpg)\n\n### 删除数据\n```\ndelete from good where id=1;\n```\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwo8gu89xj30dq0efab7.jpg)\n\n\n### 查询指定\n\n```\nselect 列名1, 列名2 ... from 表名 [条件表达式];\nselect nam from good;\n```\n\n### 模糊查询\n\n```\nselect nam from good where nam like 'f%';\n```\n\n### 条件组合查询： NOT, AND, OR\n\n```\nselect * from customer where birh is not null and mid='D0002';\n```\n![](https://ws2.sinaimg.cn/large/006tKfTcgy1flwoiycbgaj30lf0c7myh.jpg)\n\n### 查询结果排序：ASC升序 DESC降序\n```\nselect * from customer where birh is not null order by birh desc;\nselect * from customer order by birh desc;\n```\n\n![](https://ws3.sinaimg.cn/large/006tKfTcgy1flwon04znhj30md0e6jt5.jpg)\n\n### 分组 GROUP By\n\n| 函数 | 说明 |\n| ------| ------ |\n| AVG | 平均值 |\n| COUNT | 计数 |\n| MIN | 最小值 |\n| MAX | 最大值 |\n| SUM | 求和 |\n\n```\nselect count(nam), sex from customer group by sex;\n```\n\n![](https://ws4.sinaimg.cn/large/006tKfTcgy1flwot18gqrj30ja04xmxg.jpg)\n\n\n\n\n### 删除数据库\n```\ndrop database mydb;\n```\n\n","slug":"Mysql基础","published":1,"updated":"2017-11-27T07:45:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjahw3yj1000590w2a35iexyz","content":"<p>一些Mysql的基础内容</p>\n<a id=\"more\"></a>\n<h3 id=\"登陆MySQL数据库\"><a href=\"#登陆MySQL数据库\" class=\"headerlink\" title=\"登陆MySQL数据库\"></a>登陆MySQL数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u your_user_name -p Enter password: your_passwor;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmifn817j30mb08ita3.jpg\" alt=\"\"></p>\n<h3 id=\"查询数据库\"><a href=\"#查询数据库\" class=\"headerlink\" title=\"查询数据库\"></a>查询数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show databases;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmkj7qmqj30go087q3h.jpg\" alt=\"\"></p>\n<h3 id=\"创建数据库mydb\"><a href=\"#创建数据库mydb\" class=\"headerlink\" title=\"创建数据库mydb\"></a>创建数据库mydb</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create database mydb;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmmeamc2j30go087q3h.jpg\" alt=\"\"></p>\n<h3 id=\"使用指定数据库\"><a href=\"#使用指定数据库\" class=\"headerlink\" title=\"使用指定数据库\"></a>使用指定数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mydb;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwmmzsbuvj30bn02bdfx.jpg\" alt=\"\"></p>\n<h3 id=\"查看当前数据库\"><a href=\"#查看当前数据库\" class=\"headerlink\" title=\"查看当前数据库\"></a>查看当前数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select database();</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmnogn05j30bm05ower.jpg\" alt=\"\"></p>\n<h3 id=\"显示数据库\"><a href=\"#显示数据库\" class=\"headerlink\" title=\"显示数据库\"></a>显示数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show databases;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwmo84jrsj3091084t95.jpg\" alt=\"\"></p>\n<h3 id=\"创建表格\"><a href=\"#创建表格\" class=\"headerlink\" title=\"创建表格\"></a>创建表格</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table customer(</div><div class=\"line\">\tmid char(5) primary key,</div><div class=\"line\">\tnam varchar(20),</div><div class=\"line\">\tbirh datetime,</div><div class=\"line\">\tsex char(1) default&apos;0&apos;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcly1flwmq9l0wxj30cy05t3z3.jpg\" alt=\"\"></p>\n<h3 id=\"数据库有哪些表\"><a href=\"#数据库有哪些表\" class=\"headerlink\" title=\"数据库有哪些表\"></a>数据库有哪些表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show tables;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmrrtjm7j30a505wmxg.jpg\" alt=\"\"></p>\n<h3 id=\"表结构\"><a href=\"#表结构\" class=\"headerlink\" title=\"表结构\"></a>表结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcly1flwmsuqjvuj30fq07jt9h.jpg\" alt=\"\"></p>\n<h3 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop table customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmu1hu8kj30b902raa8.jpg\" alt=\"\"></p>\n<h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-- 插入一条记录</div><div class=\"line\">INSERT INTO customer values(&quot;D0001&quot;, &quot;Jack&quot;, &quot;1990-06-01&quot;, &quot;1&quot;);</div><div class=\"line\">INSERT INTO customer (mid, nam, birh, sex) values(&quot;D0002&quot;, &quot;Mike&quot;, &quot;1991-12-01&quot;, &quot;1&quot;);</div><div class=\"line\"></div><div class=\"line\">-- 插入多条记录</div><div class=\"line\">INSERT INTO customer values</div><div class=\"line\">(&quot;D0003&quot;, &quot;Jack3&quot;, &quot;1993-06-01&quot;, &quot;1&quot;), </div><div class=\"line\">(&quot;D0004&quot;, &quot;Jack4&quot;, &quot;1994-06-01&quot;, &quot;1&quot;), </div><div class=\"line\">(&quot;D0005&quot;, &quot;Jack5&quot;, &quot;1995-06-01&quot;, &quot;1&quot;);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwnwyll34j30mf0ezabz.jpg\" alt=\"\"></p>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcly1flwny6n7bkj30d706gmxm.jpg\" alt=\"\"></p>\n<h3 id=\"自增序列AUTO-INCREMENT\"><a href=\"#自增序列AUTO-INCREMENT\" class=\"headerlink\" title=\"自增序列AUTO_INCREMENT\"></a>自增序列<code>AUTO_INCREMENT</code></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-- 创建表</div><div class=\"line\">create table good (</div><div class=\"line\">\tid INT AUTO_INCREMENT PRIMARY KEY,</div><div class=\"line\">\tnam VARCHAR(30)</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">-- 插入数据</div><div class=\"line\">INSERT INTO customer (nam) values(&quot;jack&quot;), (&quot;mike&quot;), (&quot;franck&quot;);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1flwo55zwiwj30li099wfg.jpg\" alt=\"\"></p>\n<h3 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">update good set nam=&quot;jack123&quot; where id=1;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwo7cxrqrj30g608bgmf.jpg\" alt=\"\"></p>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">delete from good where id=1;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwo8gu89xj30dq0efab7.jpg\" alt=\"\"></p>\n<h3 id=\"查询指定\"><a href=\"#查询指定\" class=\"headerlink\" title=\"查询指定\"></a>查询指定</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select 列名1, 列名2 ... from 表名 [条件表达式];</div><div class=\"line\">select nam from good;</div></pre></td></tr></table></figure>\n<h3 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select nam from good where nam like &apos;f%&apos;;</div></pre></td></tr></table></figure>\n<h3 id=\"条件组合查询：-NOT-AND-OR\"><a href=\"#条件组合查询：-NOT-AND-OR\" class=\"headerlink\" title=\"条件组合查询： NOT, AND, OR\"></a>条件组合查询： NOT, AND, OR</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer where birh is not null and mid=&apos;D0002&apos;;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwoiycbgaj30lf0c7myh.jpg\" alt=\"\"></p>\n<h3 id=\"查询结果排序：ASC升序-DESC降序\"><a href=\"#查询结果排序：ASC升序-DESC降序\" class=\"headerlink\" title=\"查询结果排序：ASC升序 DESC降序\"></a>查询结果排序：ASC升序 DESC降序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer where birh is not null order by birh desc;</div><div class=\"line\">select * from customer order by birh desc;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwon04znhj30md0e6jt5.jpg\" alt=\"\"></p>\n<h3 id=\"分组-GROUP-By\"><a href=\"#分组-GROUP-By\" class=\"headerlink\" title=\"分组 GROUP By\"></a>分组 GROUP By</h3><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AVG</td>\n<td>平均值</td>\n</tr>\n<tr>\n<td>COUNT</td>\n<td>计数</td>\n</tr>\n<tr>\n<td>MIN</td>\n<td>最小值</td>\n</tr>\n<tr>\n<td>MAX</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>SUM</td>\n<td>求和</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count(nam), sex from customer group by sex;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwot18gqrj30ja04xmxg.jpg\" alt=\"\"></p>\n<h3 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop database mydb;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>一些Mysql的基础内容</p>","more":"<h3 id=\"登陆MySQL数据库\"><a href=\"#登陆MySQL数据库\" class=\"headerlink\" title=\"登陆MySQL数据库\"></a>登陆MySQL数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u your_user_name -p Enter password: your_passwor;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmifn817j30mb08ita3.jpg\" alt=\"\"></p>\n<h3 id=\"查询数据库\"><a href=\"#查询数据库\" class=\"headerlink\" title=\"查询数据库\"></a>查询数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show databases;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmkj7qmqj30go087q3h.jpg\" alt=\"\"></p>\n<h3 id=\"创建数据库mydb\"><a href=\"#创建数据库mydb\" class=\"headerlink\" title=\"创建数据库mydb\"></a>创建数据库mydb</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create database mydb;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmmeamc2j30go087q3h.jpg\" alt=\"\"></p>\n<h3 id=\"使用指定数据库\"><a href=\"#使用指定数据库\" class=\"headerlink\" title=\"使用指定数据库\"></a>使用指定数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mydb;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwmmzsbuvj30bn02bdfx.jpg\" alt=\"\"></p>\n<h3 id=\"查看当前数据库\"><a href=\"#查看当前数据库\" class=\"headerlink\" title=\"查看当前数据库\"></a>查看当前数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select database();</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwmnogn05j30bm05ower.jpg\" alt=\"\"></p>\n<h3 id=\"显示数据库\"><a href=\"#显示数据库\" class=\"headerlink\" title=\"显示数据库\"></a>显示数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show databases;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwmo84jrsj3091084t95.jpg\" alt=\"\"></p>\n<h3 id=\"创建表格\"><a href=\"#创建表格\" class=\"headerlink\" title=\"创建表格\"></a>创建表格</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table customer(</div><div class=\"line\">\tmid char(5) primary key,</div><div class=\"line\">\tnam varchar(20),</div><div class=\"line\">\tbirh datetime,</div><div class=\"line\">\tsex char(1) default&apos;0&apos;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcly1flwmq9l0wxj30cy05t3z3.jpg\" alt=\"\"></p>\n<h3 id=\"数据库有哪些表\"><a href=\"#数据库有哪些表\" class=\"headerlink\" title=\"数据库有哪些表\"></a>数据库有哪些表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show tables;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmrrtjm7j30a505wmxg.jpg\" alt=\"\"></p>\n<h3 id=\"表结构\"><a href=\"#表结构\" class=\"headerlink\" title=\"表结构\"></a>表结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcly1flwmsuqjvuj30fq07jt9h.jpg\" alt=\"\"></p>\n<h3 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop table customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcly1flwmu1hu8kj30b902raa8.jpg\" alt=\"\"></p>\n<h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-- 插入一条记录</div><div class=\"line\">INSERT INTO customer values(&quot;D0001&quot;, &quot;Jack&quot;, &quot;1990-06-01&quot;, &quot;1&quot;);</div><div class=\"line\">INSERT INTO customer (mid, nam, birh, sex) values(&quot;D0002&quot;, &quot;Mike&quot;, &quot;1991-12-01&quot;, &quot;1&quot;);</div><div class=\"line\"></div><div class=\"line\">-- 插入多条记录</div><div class=\"line\">INSERT INTO customer values</div><div class=\"line\">(&quot;D0003&quot;, &quot;Jack3&quot;, &quot;1993-06-01&quot;, &quot;1&quot;), </div><div class=\"line\">(&quot;D0004&quot;, &quot;Jack4&quot;, &quot;1994-06-01&quot;, &quot;1&quot;), </div><div class=\"line\">(&quot;D0005&quot;, &quot;Jack5&quot;, &quot;1995-06-01&quot;, &quot;1&quot;);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwnwyll34j30mf0ezabz.jpg\" alt=\"\"></p>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcly1flwny6n7bkj30d706gmxm.jpg\" alt=\"\"></p>\n<h3 id=\"自增序列AUTO-INCREMENT\"><a href=\"#自增序列AUTO-INCREMENT\" class=\"headerlink\" title=\"自增序列AUTO_INCREMENT\"></a>自增序列<code>AUTO_INCREMENT</code></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-- 创建表</div><div class=\"line\">create table good (</div><div class=\"line\">\tid INT AUTO_INCREMENT PRIMARY KEY,</div><div class=\"line\">\tnam VARCHAR(30)</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">-- 插入数据</div><div class=\"line\">INSERT INTO customer (nam) values(&quot;jack&quot;), (&quot;mike&quot;), (&quot;franck&quot;);</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1flwo55zwiwj30li099wfg.jpg\" alt=\"\"></p>\n<h3 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">update good set nam=&quot;jack123&quot; where id=1;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwo7cxrqrj30g608bgmf.jpg\" alt=\"\"></p>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">delete from good where id=1;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwo8gu89xj30dq0efab7.jpg\" alt=\"\"></p>\n<h3 id=\"查询指定\"><a href=\"#查询指定\" class=\"headerlink\" title=\"查询指定\"></a>查询指定</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select 列名1, 列名2 ... from 表名 [条件表达式];</div><div class=\"line\">select nam from good;</div></pre></td></tr></table></figure>\n<h3 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select nam from good where nam like &apos;f%&apos;;</div></pre></td></tr></table></figure>\n<h3 id=\"条件组合查询：-NOT-AND-OR\"><a href=\"#条件组合查询：-NOT-AND-OR\" class=\"headerlink\" title=\"条件组合查询： NOT, AND, OR\"></a>条件组合查询： NOT, AND, OR</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer where birh is not null and mid=&apos;D0002&apos;;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tKfTcgy1flwoiycbgaj30lf0c7myh.jpg\" alt=\"\"></p>\n<h3 id=\"查询结果排序：ASC升序-DESC降序\"><a href=\"#查询结果排序：ASC升序-DESC降序\" class=\"headerlink\" title=\"查询结果排序：ASC升序 DESC降序\"></a>查询结果排序：ASC升序 DESC降序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from customer where birh is not null order by birh desc;</div><div class=\"line\">select * from customer order by birh desc;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1flwon04znhj30md0e6jt5.jpg\" alt=\"\"></p>\n<h3 id=\"分组-GROUP-By\"><a href=\"#分组-GROUP-By\" class=\"headerlink\" title=\"分组 GROUP By\"></a>分组 GROUP By</h3><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AVG</td>\n<td>平均值</td>\n</tr>\n<tr>\n<td>COUNT</td>\n<td>计数</td>\n</tr>\n<tr>\n<td>MIN</td>\n<td>最小值</td>\n</tr>\n<tr>\n<td>MAX</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>SUM</td>\n<td>求和</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count(nam), sex from customer group by sex;</div></pre></td></tr></table></figure>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1flwot18gqrj30ja04xmxg.jpg\" alt=\"\"></p>\n<h3 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop database mydb;</div></pre></td></tr></table></figure>"},{"title":"Java基础：异常","date":"2017-10-24T02:02:46.000Z","_content":"## Java异常简介\nJava异常是Java提供的一种识别及响应错误的一致性机制。\nJava异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。在有效使用异常的情况下，异常能清晰的回答what, where, why这3个问题：异常类型回答了“什么”被抛出，异常堆栈跟踪回答了“在哪“抛出，异常信息回答了“为什么“会抛出。\n<!--more-->\nJava异常机制用到的几个关键字：try、catch、finally、throw、throws。\n\n>- try       \n用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。\n>- catch\n用于捕获异常。catch用来捕获try语句块中发生的异常。\n>- finally\nfinally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。\n>- throw\n用于抛出异常。\n>- throws\n用在方法签名中，用于声明该方法可能抛出的异常。","source":"_posts/Java基础：异常.md","raw":"---\ntitle: Java基础：异常\ndate: 2017-10-24 10:02:46\ntags: Java基础\ncategories: Java\n---\n## Java异常简介\nJava异常是Java提供的一种识别及响应错误的一致性机制。\nJava异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。在有效使用异常的情况下，异常能清晰的回答what, where, why这3个问题：异常类型回答了“什么”被抛出，异常堆栈跟踪回答了“在哪“抛出，异常信息回答了“为什么“会抛出。\n<!--more-->\nJava异常机制用到的几个关键字：try、catch、finally、throw、throws。\n\n>- try       \n用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。\n>- catch\n用于捕获异常。catch用来捕获try语句块中发生的异常。\n>- finally\nfinally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。\n>- throw\n用于抛出异常。\n>- throws\n用在方法签名中，用于声明该方法可能抛出的异常。","slug":"Java基础：异常","published":1,"updated":"2017-11-09T02:30:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjahw3yj3000690w2hsorm2bh","content":"<h2 id=\"Java异常简介\"><a href=\"#Java异常简介\" class=\"headerlink\" title=\"Java异常简介\"></a>Java异常简介</h2><p>Java异常是Java提供的一种识别及响应错误的一致性机制。<br>Java异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。在有效使用异常的情况下，异常能清晰的回答what, where, why这3个问题：异常类型回答了“什么”被抛出，异常堆栈跟踪回答了“在哪“抛出，异常信息回答了“为什么“会抛出。<br><a id=\"more\"></a><br>Java异常机制用到的几个关键字：try、catch、finally、throw、throws。</p>\n<blockquote>\n<ul>\n<li>try<br>用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。</li>\n<li>catch<br>用于捕获异常。catch用来捕获try语句块中发生的异常。</li>\n<li>finally<br>finally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。</li>\n<li>throw<br>用于抛出异常。</li>\n<li>throws<br>用在方法签名中，用于声明该方法可能抛出的异常。</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"Java异常简介\"><a href=\"#Java异常简介\" class=\"headerlink\" title=\"Java异常简介\"></a>Java异常简介</h2><p>Java异常是Java提供的一种识别及响应错误的一致性机制。<br>Java异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。在有效使用异常的情况下，异常能清晰的回答what, where, why这3个问题：异常类型回答了“什么”被抛出，异常堆栈跟踪回答了“在哪“抛出，异常信息回答了“为什么“会抛出。<br>","more":"<br>Java异常机制用到的几个关键字：try、catch、finally、throw、throws。</p>\n<blockquote>\n<ul>\n<li>try<br>用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。</li>\n<li>catch<br>用于捕获异常。catch用来捕获try语句块中发生的异常。</li>\n<li>finally<br>finally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。</li>\n<li>throw<br>用于抛出异常。</li>\n<li>throws<br>用在方法签名中，用于声明该方法可能抛出的异常。</li>\n</ul>\n</blockquote>"},{"title":"Java:复制文件和文件夹","date":"2017-11-02T02:45:10.000Z","comments":1,"_content":"### Java基础练习\nJava代码实现文件夹拷贝,文件夹可能包含文件夹和文件\n<!--more-->\n```java\nimport java.io.*;\n\npublic class CopyUtils {\n\n    public static boolean copyFile(String oldPath, String newPath) {\n\n        File oldFile = new File(oldPath);\n        File newFile = new File(newPath);\n\n        //判断源文件是否存在\n        if (!oldFile.exists()) {\n            System.out.println(\"源文件不存在\");\n            return false;\n        }\n        //源文件存在，判断是否为目录\n        if (oldFile.isDirectory()) {\n            System.out.println(\"仅拷贝文件，不拷贝文件夹\");\n            return false;\n        }\n        //新文件存在\n        if (newFile.exists()) {\n            System.out.println(\"文件已存在\");\n            return true;\n        }\n\n        String newFilePath = newFile.getAbsolutePath() + File.separator + oldFile.getName();\n        boolean isCreateDirs = newFile.mkdirs();\n\n        //新文件目录无法创建\n        if (!isCreateDirs) {\n            System.out.println(\"无法创建目标文件目录\");\n            return false;\n        }\n\n        int data;\n        byte[] bytes = new byte[1024];\n\n        FileInputStream inputStream = null;\n        FileOutputStream outPutStream = null;\n\n        try {\n\n            inputStream = new FileInputStream(oldFile);\n            outPutStream = new FileOutputStream(newFilePath);\n\n            while ((data = inputStream.read(bytes)) != -1) {\n                outPutStream.write(bytes, 0, data);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (outPutStream != null) {\n                    outPutStream.close();\n                }\n\n                if (inputStream != null) {\n                    inputStream.close();\n                }\n\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n        }\n\n        return true;\n    }\n\n    public static boolean copyFolder(String oldPath, String newPath) {\n        boolean result = false;\n\n        try {\n            File oldFile = new File(oldPath);\n            File newFile = new File(newPath);\n\n            //检查目标目录\n            if (!newFile.exists()) {\n                newFile.mkdirs();\n            }\n\n            //读取源目录文件;\n            String[] fileNames = oldFile.list();\n\n            //检查目录文件数量\n            if (fileNames.length == 0) {\n                return false;\n            }\n\n            File temp = null;\n\n            for (int i = 0, len = fileNames.length; i < len; i++) {\n                if (oldPath.endsWith(File.separator)) {\n                    temp = new File(oldPath + fileNames[i]);\n                } else {\n                    temp = new File(oldPath + File.separator + fileNames[i]);\n                }\n\n                if (temp.isFile()) {\n                    FileInputStream input = new FileInputStream(temp);\n                    FileOutputStream output = new FileOutputStream(newPath + File.separator + (temp.getName()).toString());\n                    byte[] bytes = new byte[1024];\n                    int data;\n\n                    while((data = input.read(bytes)) != -1) {\n                        output.write(bytes, 0, data);\n                    }\n\n                    output.flush();\n                    output.close();\n                    input.close();\n                }\n\n                if(temp.isDirectory()) {\n                    copyFolder(oldPath + File.separator + fileNames[i], newPath + File.separator + fileNames[i]);\n                }\n            }\n\n            if(new File(newPath).exists()) {\n                result = true;\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return result;\n    }\n}\n```\n\n```java\n\n//测试\n\nclass TestCopyUtils {\n    public static void main(String[] args) throws Exception {\n        test1();\n    }\n\n    public static void test1() throws Exception {\n        CopyUtils.copyFolder(\"./src/day1/\", \"./src/test_folder/\");\n    }\n}\n```","source":"_posts/Java-复制文件和文件夹.md","raw":"---\ntitle: 'Java:复制文件和文件夹'\ndate: 2017-11-02 10:45:10\ncomments: true\ntags: Java基础\ncategories: Java\n---\n### Java基础练习\nJava代码实现文件夹拷贝,文件夹可能包含文件夹和文件\n<!--more-->\n```java\nimport java.io.*;\n\npublic class CopyUtils {\n\n    public static boolean copyFile(String oldPath, String newPath) {\n\n        File oldFile = new File(oldPath);\n        File newFile = new File(newPath);\n\n        //判断源文件是否存在\n        if (!oldFile.exists()) {\n            System.out.println(\"源文件不存在\");\n            return false;\n        }\n        //源文件存在，判断是否为目录\n        if (oldFile.isDirectory()) {\n            System.out.println(\"仅拷贝文件，不拷贝文件夹\");\n            return false;\n        }\n        //新文件存在\n        if (newFile.exists()) {\n            System.out.println(\"文件已存在\");\n            return true;\n        }\n\n        String newFilePath = newFile.getAbsolutePath() + File.separator + oldFile.getName();\n        boolean isCreateDirs = newFile.mkdirs();\n\n        //新文件目录无法创建\n        if (!isCreateDirs) {\n            System.out.println(\"无法创建目标文件目录\");\n            return false;\n        }\n\n        int data;\n        byte[] bytes = new byte[1024];\n\n        FileInputStream inputStream = null;\n        FileOutputStream outPutStream = null;\n\n        try {\n\n            inputStream = new FileInputStream(oldFile);\n            outPutStream = new FileOutputStream(newFilePath);\n\n            while ((data = inputStream.read(bytes)) != -1) {\n                outPutStream.write(bytes, 0, data);\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (outPutStream != null) {\n                    outPutStream.close();\n                }\n\n                if (inputStream != null) {\n                    inputStream.close();\n                }\n\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n        }\n\n        return true;\n    }\n\n    public static boolean copyFolder(String oldPath, String newPath) {\n        boolean result = false;\n\n        try {\n            File oldFile = new File(oldPath);\n            File newFile = new File(newPath);\n\n            //检查目标目录\n            if (!newFile.exists()) {\n                newFile.mkdirs();\n            }\n\n            //读取源目录文件;\n            String[] fileNames = oldFile.list();\n\n            //检查目录文件数量\n            if (fileNames.length == 0) {\n                return false;\n            }\n\n            File temp = null;\n\n            for (int i = 0, len = fileNames.length; i < len; i++) {\n                if (oldPath.endsWith(File.separator)) {\n                    temp = new File(oldPath + fileNames[i]);\n                } else {\n                    temp = new File(oldPath + File.separator + fileNames[i]);\n                }\n\n                if (temp.isFile()) {\n                    FileInputStream input = new FileInputStream(temp);\n                    FileOutputStream output = new FileOutputStream(newPath + File.separator + (temp.getName()).toString());\n                    byte[] bytes = new byte[1024];\n                    int data;\n\n                    while((data = input.read(bytes)) != -1) {\n                        output.write(bytes, 0, data);\n                    }\n\n                    output.flush();\n                    output.close();\n                    input.close();\n                }\n\n                if(temp.isDirectory()) {\n                    copyFolder(oldPath + File.separator + fileNames[i], newPath + File.separator + fileNames[i]);\n                }\n            }\n\n            if(new File(newPath).exists()) {\n                result = true;\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return result;\n    }\n}\n```\n\n```java\n\n//测试\n\nclass TestCopyUtils {\n    public static void main(String[] args) throws Exception {\n        test1();\n    }\n\n    public static void test1() throws Exception {\n        CopyUtils.copyFolder(\"./src/day1/\", \"./src/test_folder/\");\n    }\n}\n```","slug":"Java-复制文件和文件夹","published":1,"updated":"2017-11-09T02:30:51.000Z","layout":"post","photos":[],"link":"","_id":"cjahw3yj5000990w253fex83z","content":"<h3 id=\"Java基础练习\"><a href=\"#Java基础练习\" class=\"headerlink\" title=\"Java基础练习\"></a>Java基础练习</h3><p>Java代码实现文件夹拷贝,文件夹可能包含文件夹和文件<br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CopyUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">copyFile</span><span class=\"params\">(String oldPath, String newPath)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File oldFile = <span class=\"keyword\">new</span> File(oldPath);</div><div class=\"line\">        File newFile = <span class=\"keyword\">new</span> File(newPath);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//判断源文件是否存在</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!oldFile.exists()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"源文件不存在\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//源文件存在，判断是否为目录</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (oldFile.isDirectory()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"仅拷贝文件，不拷贝文件夹\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//新文件存在</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (newFile.exists()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"文件已存在\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        String newFilePath = newFile.getAbsolutePath() + File.separator + oldFile.getName();</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isCreateDirs = newFile.mkdirs();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//新文件目录无法创建</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!isCreateDirs) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"无法创建目标文件目录\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> data;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\"></div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        FileOutputStream outPutStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(oldFile);</div><div class=\"line\">            outPutStream = <span class=\"keyword\">new</span> FileOutputStream(newFilePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span> ((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                outPutStream.write(bytes, <span class=\"number\">0</span>, data);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (outPutStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    outPutStream.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (inputStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    inputStream.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</div><div class=\"line\">                ex.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">copyFolder</span><span class=\"params\">(String oldPath, String newPath)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            File oldFile = <span class=\"keyword\">new</span> File(oldPath);</div><div class=\"line\">            File newFile = <span class=\"keyword\">new</span> File(newPath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//检查目标目录</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!newFile.exists()) &#123;</div><div class=\"line\">                newFile.mkdirs();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//读取源目录文件;</span></div><div class=\"line\">            String[] fileNames = oldFile.list();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//检查目录文件数量</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (fileNames.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            File temp = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = fileNames.length; i &lt; len; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (oldPath.endsWith(File.separator)) &#123;</div><div class=\"line\">                    temp = <span class=\"keyword\">new</span> File(oldPath + fileNames[i]);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    temp = <span class=\"keyword\">new</span> File(oldPath + File.separator + fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (temp.isFile()) &#123;</div><div class=\"line\">                    FileInputStream input = <span class=\"keyword\">new</span> FileInputStream(temp);</div><div class=\"line\">                    FileOutputStream output = <span class=\"keyword\">new</span> FileOutputStream(newPath + File.separator + (temp.getName()).toString());</div><div class=\"line\">                    <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">                    <span class=\"keyword\">int</span> data;</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"keyword\">while</span>((data = input.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                        output.write(bytes, <span class=\"number\">0</span>, data);</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    output.flush();</div><div class=\"line\">                    output.close();</div><div class=\"line\">                    input.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span>(temp.isDirectory()) &#123;</div><div class=\"line\">                    copyFolder(oldPath + File.separator + fileNames[i], newPath + File.separator + fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">new</span> File(newPath).exists()) &#123;</div><div class=\"line\">                result = <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCopyUtils</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        test1();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        CopyUtils.copyFolder(<span class=\"string\">\"./src/day1/\"</span>, <span class=\"string\">\"./src/test_folder/\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"Java基础练习\"><a href=\"#Java基础练习\" class=\"headerlink\" title=\"Java基础练习\"></a>Java基础练习</h3><p>Java代码实现文件夹拷贝,文件夹可能包含文件夹和文件<br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CopyUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">copyFile</span><span class=\"params\">(String oldPath, String newPath)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        File oldFile = <span class=\"keyword\">new</span> File(oldPath);</div><div class=\"line\">        File newFile = <span class=\"keyword\">new</span> File(newPath);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//判断源文件是否存在</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!oldFile.exists()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"源文件不存在\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//源文件存在，判断是否为目录</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (oldFile.isDirectory()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"仅拷贝文件，不拷贝文件夹\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//新文件存在</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (newFile.exists()) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"文件已存在\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        String newFilePath = newFile.getAbsolutePath() + File.separator + oldFile.getName();</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isCreateDirs = newFile.mkdirs();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//新文件目录无法创建</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!isCreateDirs) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"无法创建目标文件目录\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> data;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\"></div><div class=\"line\">        FileInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        FileOutputStream outPutStream = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">            inputStream = <span class=\"keyword\">new</span> FileInputStream(oldFile);</div><div class=\"line\">            outPutStream = <span class=\"keyword\">new</span> FileOutputStream(newFilePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">while</span> ((data = inputStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                outPutStream.write(bytes, <span class=\"number\">0</span>, data);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (outPutStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    outPutStream.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (inputStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    inputStream.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</div><div class=\"line\">                ex.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">copyFolder</span><span class=\"params\">(String oldPath, String newPath)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            File oldFile = <span class=\"keyword\">new</span> File(oldPath);</div><div class=\"line\">            File newFile = <span class=\"keyword\">new</span> File(newPath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//检查目标目录</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!newFile.exists()) &#123;</div><div class=\"line\">                newFile.mkdirs();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//读取源目录文件;</span></div><div class=\"line\">            String[] fileNames = oldFile.list();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//检查目录文件数量</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (fileNames.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            File temp = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = fileNames.length; i &lt; len; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (oldPath.endsWith(File.separator)) &#123;</div><div class=\"line\">                    temp = <span class=\"keyword\">new</span> File(oldPath + fileNames[i]);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    temp = <span class=\"keyword\">new</span> File(oldPath + File.separator + fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (temp.isFile()) &#123;</div><div class=\"line\">                    FileInputStream input = <span class=\"keyword\">new</span> FileInputStream(temp);</div><div class=\"line\">                    FileOutputStream output = <span class=\"keyword\">new</span> FileOutputStream(newPath + File.separator + (temp.getName()).toString());</div><div class=\"line\">                    <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</div><div class=\"line\">                    <span class=\"keyword\">int</span> data;</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"keyword\">while</span>((data = input.read(bytes)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                        output.write(bytes, <span class=\"number\">0</span>, data);</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    output.flush();</div><div class=\"line\">                    output.close();</div><div class=\"line\">                    input.close();</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span>(temp.isDirectory()) &#123;</div><div class=\"line\">                    copyFolder(oldPath + File.separator + fileNames[i], newPath + File.separator + fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">new</span> File(newPath).exists()) &#123;</div><div class=\"line\">                result = <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestCopyUtils</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        test1();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        CopyUtils.copyFolder(<span class=\"string\">\"./src/day1/\"</span>, <span class=\"string\">\"./src/test_folder/\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"面试题：好多鱼","date":"2017-11-10T09:26:35.000Z","_content":"## 题目：好多鱼\n### 题目描述\n牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize[i] (1 ≤ i ≤ n,均为正整数)，牛牛现在想把新捕捉的鱼放入鱼缸。鱼缸内存在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍(包括2倍大小和10倍大小)，鱼A会吃掉鱼B。考虑到这个，牛牛要放入的鱼就需要保证：\n1、放进去的鱼是安全的，不会被其他鱼吃掉\n2、这条鱼放进去也不能吃掉其他鱼\n鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围minSize,maxSize,牛牛想知道有多少种大小的鱼可以放入这个鱼缸\n<!--more-->\n\n输入描述\n\n> 输入数据包括3行.\n第一行为新放入鱼的尺寸范围minSize,maxSize (1 ≤ minSize,maxSize ≤ 1000)，以空格分隔。\n第二行为鱼缸里面已经有鱼的数量n(1 ≤ n ≤ 50)\n第三行为已经有的鱼的大小fishSize[i] (1 ≤ fishSize[i] ≤ 1000)，以空格分隔。\n\n输出描述\n\n> 3\n\n### 题目分析\n\n由题目分析可知，放入的鱼不能被吃掉，也不能吃掉其他的鱼，可得出如下关系:\n\n>吃掉别的鱼：`fishSize[i]*2<=size<=fishSize[i]*10`\n被别的鱼吃掉：`2*size<=fishSize[i]<=10*size`\n不要被别的鱼吃掉，也不吃别的鱼，和平共存:\n`(size < finshSize[i]*2 || size > finshSize[i]*10) && (fishSize[i] < size*2 || fishSize[i] > size*10)`\n\n通过上面的关系，在使用开始输入鱼的大小的最小值和最大值进行遍历，就可以判断当前尺寸的鱼是否可以放入鱼缸中了。\n\n\n### 程序代码\n``` java\npackage ACM;\n\nimport java.util.Scanner;\n\n/**\n * 分析：\n * 吃掉别的鱼：\n * fishSize[i]*2<=size<=fishSize[i]*10\n * 被别的鱼吃掉：\n * 2*size<=fishSize[i]<=10*size\n * 不要被别的鱼吃掉，也不吃别的鱼，和平共存\n * (size < finshSize[i]*2 || size > finshSize[i]*10) && (fishSize[i] < size*2 || fishSize[i] > size*10)\n */\npublic class Question1 {\n    public static void main(String[] args) throws Exception {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"放入鱼的最小范围：\");\n        int minSize = scanner.nextInt();\n\n        System.out.println(\"放入鱼的最大范围：\");\n        int maxSize = scanner.nextInt();\n\n        System.out.println(\"放入鱼的数量：\");\n        int fishNumber = scanner.nextInt();\n\n        int bag = 0; //可以放入多少鱼\n        int fishCount = 0; //鱼的总数\n        int fishIndex = 0; //鱼的编号，索引\n        Integer[] fishes = new Integer[fishNumber]; //鱼数组\n\n        //遍历，输入鱼的大小\n        while (fishIndex < fishNumber) {\n            System.out.println(\"第\" + (fishIndex + 1) + \"条鱼大小为：\");\n            fishes[fishIndex] = scanner.nextInt();\n            fishIndex = fishIndex + 1;\n        }\n\n        //遍历鱼大小\n        for (int i = minSize; i <= maxSize; i++) {\n           if(compare(i, fishes)) {\n               bag = bag + 1;\n           }\n        }\n\n        System.out.println(\"可以放入鱼的数量: \" + bag);\n    }\n\n    /**\n     * @param size   int 一个鱼的尺寸\n     * @param fishes int[] 存放鱼的数组\n     * @return boolean true:可以放入; false:不能放入\n     */\n    public static boolean compare(int size, Integer[] fishes) {\n        int bag = 0;\n        for (int i = 0, len = fishes.length; i < len; i++) {\n            if ((size < fishes[i] * 2 || size > fishes[i] * 10) &&\n                    (fishes[i] < size * 2 || fishes[i] > size * 10)) {\n                bag++;\n                if(bag == fishes.length) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n```","source":"_posts/面试题.md","raw":"---\ntitle: 面试题：好多鱼\ndate: 2017-11-10 17:26:35\ntags: 面试题\ncategories: 面试题\n---\n## 题目：好多鱼\n### 题目描述\n牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize[i] (1 ≤ i ≤ n,均为正整数)，牛牛现在想把新捕捉的鱼放入鱼缸。鱼缸内存在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍(包括2倍大小和10倍大小)，鱼A会吃掉鱼B。考虑到这个，牛牛要放入的鱼就需要保证：\n1、放进去的鱼是安全的，不会被其他鱼吃掉\n2、这条鱼放进去也不能吃掉其他鱼\n鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围minSize,maxSize,牛牛想知道有多少种大小的鱼可以放入这个鱼缸\n<!--more-->\n\n输入描述\n\n> 输入数据包括3行.\n第一行为新放入鱼的尺寸范围minSize,maxSize (1 ≤ minSize,maxSize ≤ 1000)，以空格分隔。\n第二行为鱼缸里面已经有鱼的数量n(1 ≤ n ≤ 50)\n第三行为已经有的鱼的大小fishSize[i] (1 ≤ fishSize[i] ≤ 1000)，以空格分隔。\n\n输出描述\n\n> 3\n\n### 题目分析\n\n由题目分析可知，放入的鱼不能被吃掉，也不能吃掉其他的鱼，可得出如下关系:\n\n>吃掉别的鱼：`fishSize[i]*2<=size<=fishSize[i]*10`\n被别的鱼吃掉：`2*size<=fishSize[i]<=10*size`\n不要被别的鱼吃掉，也不吃别的鱼，和平共存:\n`(size < finshSize[i]*2 || size > finshSize[i]*10) && (fishSize[i] < size*2 || fishSize[i] > size*10)`\n\n通过上面的关系，在使用开始输入鱼的大小的最小值和最大值进行遍历，就可以判断当前尺寸的鱼是否可以放入鱼缸中了。\n\n\n### 程序代码\n``` java\npackage ACM;\n\nimport java.util.Scanner;\n\n/**\n * 分析：\n * 吃掉别的鱼：\n * fishSize[i]*2<=size<=fishSize[i]*10\n * 被别的鱼吃掉：\n * 2*size<=fishSize[i]<=10*size\n * 不要被别的鱼吃掉，也不吃别的鱼，和平共存\n * (size < finshSize[i]*2 || size > finshSize[i]*10) && (fishSize[i] < size*2 || fishSize[i] > size*10)\n */\npublic class Question1 {\n    public static void main(String[] args) throws Exception {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"放入鱼的最小范围：\");\n        int minSize = scanner.nextInt();\n\n        System.out.println(\"放入鱼的最大范围：\");\n        int maxSize = scanner.nextInt();\n\n        System.out.println(\"放入鱼的数量：\");\n        int fishNumber = scanner.nextInt();\n\n        int bag = 0; //可以放入多少鱼\n        int fishCount = 0; //鱼的总数\n        int fishIndex = 0; //鱼的编号，索引\n        Integer[] fishes = new Integer[fishNumber]; //鱼数组\n\n        //遍历，输入鱼的大小\n        while (fishIndex < fishNumber) {\n            System.out.println(\"第\" + (fishIndex + 1) + \"条鱼大小为：\");\n            fishes[fishIndex] = scanner.nextInt();\n            fishIndex = fishIndex + 1;\n        }\n\n        //遍历鱼大小\n        for (int i = minSize; i <= maxSize; i++) {\n           if(compare(i, fishes)) {\n               bag = bag + 1;\n           }\n        }\n\n        System.out.println(\"可以放入鱼的数量: \" + bag);\n    }\n\n    /**\n     * @param size   int 一个鱼的尺寸\n     * @param fishes int[] 存放鱼的数组\n     * @return boolean true:可以放入; false:不能放入\n     */\n    public static boolean compare(int size, Integer[] fishes) {\n        int bag = 0;\n        for (int i = 0, len = fishes.length; i < len; i++) {\n            if ((size < fishes[i] * 2 || size > fishes[i] * 10) &&\n                    (fishes[i] < size * 2 || fishes[i] > size * 10)) {\n                bag++;\n                if(bag == fishes.length) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n```","slug":"面试题","published":1,"updated":"2017-11-17T02:01:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjahw3yqk000h90w2vqj21qbp","content":"<h2 id=\"题目：好多鱼\"><a href=\"#题目：好多鱼\" class=\"headerlink\" title=\"题目：好多鱼\"></a>题目：好多鱼</h2><h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize[i] (1 ≤ i ≤ n,均为正整数)，牛牛现在想把新捕捉的鱼放入鱼缸。鱼缸内存在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍(包括2倍大小和10倍大小)，鱼A会吃掉鱼B。考虑到这个，牛牛要放入的鱼就需要保证：<br>1、放进去的鱼是安全的，不会被其他鱼吃掉<br>2、这条鱼放进去也不能吃掉其他鱼<br>鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围minSize,maxSize,牛牛想知道有多少种大小的鱼可以放入这个鱼缸<br><a id=\"more\"></a></p>\n<p>输入描述</p>\n<blockquote>\n<p>输入数据包括3行.<br>第一行为新放入鱼的尺寸范围minSize,maxSize (1 ≤ minSize,maxSize ≤ 1000)，以空格分隔。<br>第二行为鱼缸里面已经有鱼的数量n(1 ≤ n ≤ 50)<br>第三行为已经有的鱼的大小fishSize[i] (1 ≤ fishSize[i] ≤ 1000)，以空格分隔。</p>\n</blockquote>\n<p>输出描述</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<h3 id=\"题目分析\"><a href=\"#题目分析\" class=\"headerlink\" title=\"题目分析\"></a>题目分析</h3><p>由题目分析可知，放入的鱼不能被吃掉，也不能吃掉其他的鱼，可得出如下关系:</p>\n<blockquote>\n<p>吃掉别的鱼：<code>fishSize[i]*2&lt;=size&lt;=fishSize[i]*10</code><br>被别的鱼吃掉：<code>2*size&lt;=fishSize[i]&lt;=10*size</code><br>不要被别的鱼吃掉，也不吃别的鱼，和平共存:<br><code>(size &lt; finshSize[i]*2 || size &gt; finshSize[i]*10) &amp;&amp; (fishSize[i] &lt; size*2 || fishSize[i] &gt; size*10)</code></p>\n</blockquote>\n<p>通过上面的关系，在使用开始输入鱼的大小的最小值和最大值进行遍历，就可以判断当前尺寸的鱼是否可以放入鱼缸中了。</p>\n<h3 id=\"程序代码\"><a href=\"#程序代码\" class=\"headerlink\" title=\"程序代码\"></a>程序代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> ACM;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 分析：</span></div><div class=\"line\"><span class=\"comment\"> * 吃掉别的鱼：</span></div><div class=\"line\"><span class=\"comment\"> * fishSize[i]*2&lt;=size&lt;=fishSize[i]*10</span></div><div class=\"line\"><span class=\"comment\"> * 被别的鱼吃掉：</span></div><div class=\"line\"><span class=\"comment\"> * 2*size&lt;=fishSize[i]&lt;=10*size</span></div><div class=\"line\"><span class=\"comment\"> * 不要被别的鱼吃掉，也不吃别的鱼，和平共存</span></div><div class=\"line\"><span class=\"comment\"> * (size &lt; finshSize[i]*2 || size &gt; finshSize[i]*10) &amp;&amp; (fishSize[i] &lt; size*2 || fishSize[i] &gt; size*10)</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Question1</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的最小范围：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> minSize = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的最大范围：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> maxSize = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的数量：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> fishNumber = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> bag = <span class=\"number\">0</span>; <span class=\"comment\">//可以放入多少鱼</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fishCount = <span class=\"number\">0</span>; <span class=\"comment\">//鱼的总数</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fishIndex = <span class=\"number\">0</span>; <span class=\"comment\">//鱼的编号，索引</span></div><div class=\"line\">        Integer[] fishes = <span class=\"keyword\">new</span> Integer[fishNumber]; <span class=\"comment\">//鱼数组</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//遍历，输入鱼的大小</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (fishIndex &lt; fishNumber) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"第\"</span> + (fishIndex + <span class=\"number\">1</span>) + <span class=\"string\">\"条鱼大小为：\"</span>);</div><div class=\"line\">            fishes[fishIndex] = scanner.nextInt();</div><div class=\"line\">            fishIndex = fishIndex + <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//遍历鱼大小</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = minSize; i &lt;= maxSize; i++) &#123;</div><div class=\"line\">           <span class=\"keyword\">if</span>(compare(i, fishes)) &#123;</div><div class=\"line\">               bag = bag + <span class=\"number\">1</span>;</div><div class=\"line\">           &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"可以放入鱼的数量: \"</span> + bag);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size   int 一个鱼的尺寸</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fishes int[] 存放鱼的数组</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean true:可以放入; false:不能放入</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">int</span> size, Integer[] fishes)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> bag = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = fishes.length; i &lt; len; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> ((size &lt; fishes[i] * <span class=\"number\">2</span> || size &gt; fishes[i] * <span class=\"number\">10</span>) &amp;&amp;</div><div class=\"line\">                    (fishes[i] &lt; size * <span class=\"number\">2</span> || fishes[i] &gt; size * <span class=\"number\">10</span>)) &#123;</div><div class=\"line\">                bag++;</div><div class=\"line\">                <span class=\"keyword\">if</span>(bag == fishes.length) &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"题目：好多鱼\"><a href=\"#题目：好多鱼\" class=\"headerlink\" title=\"题目：好多鱼\"></a>题目：好多鱼</h2><h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize[i] (1 ≤ i ≤ n,均为正整数)，牛牛现在想把新捕捉的鱼放入鱼缸。鱼缸内存在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍(包括2倍大小和10倍大小)，鱼A会吃掉鱼B。考虑到这个，牛牛要放入的鱼就需要保证：<br>1、放进去的鱼是安全的，不会被其他鱼吃掉<br>2、这条鱼放进去也不能吃掉其他鱼<br>鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围minSize,maxSize,牛牛想知道有多少种大小的鱼可以放入这个鱼缸<br>","more":"</p>\n<p>输入描述</p>\n<blockquote>\n<p>输入数据包括3行.<br>第一行为新放入鱼的尺寸范围minSize,maxSize (1 ≤ minSize,maxSize ≤ 1000)，以空格分隔。<br>第二行为鱼缸里面已经有鱼的数量n(1 ≤ n ≤ 50)<br>第三行为已经有的鱼的大小fishSize[i] (1 ≤ fishSize[i] ≤ 1000)，以空格分隔。</p>\n</blockquote>\n<p>输出描述</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<h3 id=\"题目分析\"><a href=\"#题目分析\" class=\"headerlink\" title=\"题目分析\"></a>题目分析</h3><p>由题目分析可知，放入的鱼不能被吃掉，也不能吃掉其他的鱼，可得出如下关系:</p>\n<blockquote>\n<p>吃掉别的鱼：<code>fishSize[i]*2&lt;=size&lt;=fishSize[i]*10</code><br>被别的鱼吃掉：<code>2*size&lt;=fishSize[i]&lt;=10*size</code><br>不要被别的鱼吃掉，也不吃别的鱼，和平共存:<br><code>(size &lt; finshSize[i]*2 || size &gt; finshSize[i]*10) &amp;&amp; (fishSize[i] &lt; size*2 || fishSize[i] &gt; size*10)</code></p>\n</blockquote>\n<p>通过上面的关系，在使用开始输入鱼的大小的最小值和最大值进行遍历，就可以判断当前尺寸的鱼是否可以放入鱼缸中了。</p>\n<h3 id=\"程序代码\"><a href=\"#程序代码\" class=\"headerlink\" title=\"程序代码\"></a>程序代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> ACM;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 分析：</span></div><div class=\"line\"><span class=\"comment\"> * 吃掉别的鱼：</span></div><div class=\"line\"><span class=\"comment\"> * fishSize[i]*2&lt;=size&lt;=fishSize[i]*10</span></div><div class=\"line\"><span class=\"comment\"> * 被别的鱼吃掉：</span></div><div class=\"line\"><span class=\"comment\"> * 2*size&lt;=fishSize[i]&lt;=10*size</span></div><div class=\"line\"><span class=\"comment\"> * 不要被别的鱼吃掉，也不吃别的鱼，和平共存</span></div><div class=\"line\"><span class=\"comment\"> * (size &lt; finshSize[i]*2 || size &gt; finshSize[i]*10) &amp;&amp; (fishSize[i] &lt; size*2 || fishSize[i] &gt; size*10)</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Question1</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的最小范围：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> minSize = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的最大范围：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> maxSize = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"放入鱼的数量：\"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> fishNumber = scanner.nextInt();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> bag = <span class=\"number\">0</span>; <span class=\"comment\">//可以放入多少鱼</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fishCount = <span class=\"number\">0</span>; <span class=\"comment\">//鱼的总数</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fishIndex = <span class=\"number\">0</span>; <span class=\"comment\">//鱼的编号，索引</span></div><div class=\"line\">        Integer[] fishes = <span class=\"keyword\">new</span> Integer[fishNumber]; <span class=\"comment\">//鱼数组</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//遍历，输入鱼的大小</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (fishIndex &lt; fishNumber) &#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"第\"</span> + (fishIndex + <span class=\"number\">1</span>) + <span class=\"string\">\"条鱼大小为：\"</span>);</div><div class=\"line\">            fishes[fishIndex] = scanner.nextInt();</div><div class=\"line\">            fishIndex = fishIndex + <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//遍历鱼大小</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = minSize; i &lt;= maxSize; i++) &#123;</div><div class=\"line\">           <span class=\"keyword\">if</span>(compare(i, fishes)) &#123;</div><div class=\"line\">               bag = bag + <span class=\"number\">1</span>;</div><div class=\"line\">           &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        System.out.println(<span class=\"string\">\"可以放入鱼的数量: \"</span> + bag);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size   int 一个鱼的尺寸</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fishes int[] 存放鱼的数组</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean true:可以放入; false:不能放入</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">int</span> size, Integer[] fishes)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> bag = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, len = fishes.length; i &lt; len; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> ((size &lt; fishes[i] * <span class=\"number\">2</span> || size &gt; fishes[i] * <span class=\"number\">10</span>) &amp;&amp;</div><div class=\"line\">                    (fishes[i] &lt; size * <span class=\"number\">2</span> || fishes[i] &gt; size * <span class=\"number\">10</span>)) &#123;</div><div class=\"line\">                bag++;</div><div class=\"line\">                <span class=\"keyword\">if</span>(bag == fishes.length) &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Java基础：网络编程","date":"2017-11-17T02:16:12.000Z","_content":"## 网络编程中两个主要的问题\n\n一个是如何准确的定位网络上一台或多台主机，另一个就是找到主机后如何可靠高效的进行数据传输。\n\n在TCP/IP协议中IP层主要负责网络主机的定位，数据传输的路由，由IP地址可以唯一地确定Internet上的一台主机。\n\n而TCP层则提供面向应用的可靠（tcp）的或非可靠（UDP）的数据传输机制，这是网络编程的主要对象，一般不需要关心IP层是如何处理数据的。\n\n目前较为流行的网络编程模型是客户机/服务器（C/S）结构。即通信双方一方作为服务器等待客户提出请求并予以响应。客户则在需要服务时向服务器提 出申请。服务器一般作为守护进程始终运行，监听网络端口，一旦有客户请求，就会启动一个服务进程来响应该客户，同时自己继续监听服务端口，使后来的客户也 能及时得到服务。\n\n<!--more-->\n\n","source":"_posts/Java基础：网络编程.md","raw":"---\ntitle: Java基础：网络编程\ndate: 2017-11-17 10:16:12\ntags:\n- Java基础\n- Java网络编程\ncategories: Java\n---\n## 网络编程中两个主要的问题\n\n一个是如何准确的定位网络上一台或多台主机，另一个就是找到主机后如何可靠高效的进行数据传输。\n\n在TCP/IP协议中IP层主要负责网络主机的定位，数据传输的路由，由IP地址可以唯一地确定Internet上的一台主机。\n\n而TCP层则提供面向应用的可靠（tcp）的或非可靠（UDP）的数据传输机制，这是网络编程的主要对象，一般不需要关心IP层是如何处理数据的。\n\n目前较为流行的网络编程模型是客户机/服务器（C/S）结构。即通信双方一方作为服务器等待客户提出请求并予以响应。客户则在需要服务时向服务器提 出申请。服务器一般作为守护进程始终运行，监听网络端口，一旦有客户请求，就会启动一个服务进程来响应该客户，同时自己继续监听服务端口，使后来的客户也 能及时得到服务。\n\n<!--more-->\n\n","slug":"Java基础：网络编程","published":1,"updated":"2017-11-17T08:40:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjahw3yqs000j90w2bor0b92q","content":"<h2 id=\"网络编程中两个主要的问题\"><a href=\"#网络编程中两个主要的问题\" class=\"headerlink\" title=\"网络编程中两个主要的问题\"></a>网络编程中两个主要的问题</h2><p>一个是如何准确的定位网络上一台或多台主机，另一个就是找到主机后如何可靠高效的进行数据传输。</p>\n<p>在TCP/IP协议中IP层主要负责网络主机的定位，数据传输的路由，由IP地址可以唯一地确定Internet上的一台主机。</p>\n<p>而TCP层则提供面向应用的可靠（tcp）的或非可靠（UDP）的数据传输机制，这是网络编程的主要对象，一般不需要关心IP层是如何处理数据的。</p>\n<p>目前较为流行的网络编程模型是客户机/服务器（C/S）结构。即通信双方一方作为服务器等待客户提出请求并予以响应。客户则在需要服务时向服务器提 出申请。服务器一般作为守护进程始终运行，监听网络端口，一旦有客户请求，就会启动一个服务进程来响应该客户，同时自己继续监听服务端口，使后来的客户也 能及时得到服务。</p>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<h2 id=\"网络编程中两个主要的问题\"><a href=\"#网络编程中两个主要的问题\" class=\"headerlink\" title=\"网络编程中两个主要的问题\"></a>网络编程中两个主要的问题</h2><p>一个是如何准确的定位网络上一台或多台主机，另一个就是找到主机后如何可靠高效的进行数据传输。</p>\n<p>在TCP/IP协议中IP层主要负责网络主机的定位，数据传输的路由，由IP地址可以唯一地确定Internet上的一台主机。</p>\n<p>而TCP层则提供面向应用的可靠（tcp）的或非可靠（UDP）的数据传输机制，这是网络编程的主要对象，一般不需要关心IP层是如何处理数据的。</p>\n<p>目前较为流行的网络编程模型是客户机/服务器（C/S）结构。即通信双方一方作为服务器等待客户提出请求并予以响应。客户则在需要服务时向服务器提 出申请。服务器一般作为守护进程始终运行，监听网络端口，一旦有客户请求，就会启动一个服务进程来响应该客户，同时自己继续监听服务端口，使后来的客户也 能及时得到服务。</p>","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cjahw3yid000090w2j7jk2e5b","category_id":"cjahw3yik000190w2kafxgvy5","_id":"cjahw3yio000490w25jzi59xo"},{"post_id":"cjahw3yj3000690w2hsorm2bh","category_id":"cjahw3yik000190w2kafxgvy5","_id":"cjahw3yja000c90w2go029va2"},{"post_id":"cjahw3yj5000990w253fex83z","category_id":"cjahw3yik000190w2kafxgvy5","_id":"cjahw3yja000e90w25e92xlwf"},{"post_id":"cjahw3yj1000590w2a35iexyz","category_id":"cjahw3yj4000790w2glk294gh","_id":"cjahw3yja000f90w29sxyd8fm"},{"post_id":"cjahw3yqs000j90w2bor0b92q","category_id":"cjahw3yik000190w2kafxgvy5","_id":"cjahw3yqx000m90w2r7h4r2v1"},{"post_id":"cjahw3yqk000h90w2vqj21qbp","category_id":"cjahw3yqv000k90w2b7npam10","_id":"cjahw3yqx000p90w20k0aqkle"}],"PostTag":[{"post_id":"cjahw3yid000090w2j7jk2e5b","tag_id":"cjahw3yim000290w2z7naemjq","_id":"cjahw3yin000390w2uu7fzmfv"},{"post_id":"cjahw3yj3000690w2hsorm2bh","tag_id":"cjahw3yim000290w2z7naemjq","_id":"cjahw3yj8000a90w2nha5g37g"},{"post_id":"cjahw3yj5000990w253fex83z","tag_id":"cjahw3yim000290w2z7naemjq","_id":"cjahw3yj9000b90w2x0gcx9i2"},{"post_id":"cjahw3yj1000590w2a35iexyz","tag_id":"cjahw3yj4000890w2a0oamci3","_id":"cjahw3yja000d90w28ypq9o5i"},{"post_id":"cjahw3yqk000h90w2vqj21qbp","tag_id":"cjahw3yqv000l90w25wj11q5j","_id":"cjahw3yqx000o90w250j4uwhd"},{"post_id":"cjahw3yqs000j90w2bor0b92q","tag_id":"cjahw3yim000290w2z7naemjq","_id":"cjahw3yqx000q90w2kmphmhj4"},{"post_id":"cjahw3yqs000j90w2bor0b92q","tag_id":"cjahw3yqx000n90w2n4bih1np","_id":"cjahw3yqy000r90w2r1g94d52"}],"Tag":[{"name":"Java基础","_id":"cjahw3yim000290w2z7naemjq"},{"name":"MySQL基础","_id":"cjahw3yj4000890w2a0oamci3"},{"name":"面试题","_id":"cjahw3yqv000l90w25wj11q5j"},{"name":"Java网络编程","_id":"cjahw3yqx000n90w2n4bih1np"}]}}